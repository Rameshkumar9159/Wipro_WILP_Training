<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>RAID Systems</title>
    <link rel="stylesheet" type="text/css" href="_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="raid-systems">
<h1>RAID Systems</h1>
<section id="understanding-raid">
<h2>Understanding RAID</h2>
<p>RAID (Redundant Array of Independent Disks) is a technology that combines multiple disk drives into a single logical unit to improve performance, provide redundancy, or both. RAID systems are crucial for data protection and performance optimization in storage systems.</p>
<section id="what-is-raid">
<h3>What is RAID?</h3>
<p>RAID provides:</p>
<ul class="simple">
<li><p><strong>Data Redundancy</strong>: Protection against disk failures</p></li>
<li><p><strong>Performance Improvement</strong>: Faster read/write operations through parallelism</p></li>
<li><p><strong>Storage Efficiency</strong>: Optimized use of available disk space</p></li>
<li><p><strong>Fault Tolerance</strong>: Ability to continue operation despite disk failures</p></li>
<li><p><strong>Scalability</strong>: Easy expansion of storage capacity</p></li>
</ul>
</section>
<section id="raid-levels-overview">
<h3>RAID Levels Overview</h3>
<section id="standard-raid-levels">
<h4>Standard RAID Levels</h4>
<div class="highlight-text notranslate"><div class="highlight"><pre><span></span>RAID Level    | Description              | Min Disks | Fault Tolerance | Performance
--------------|--------------------------|-----------|-----------------|-------------
RAID 0        | Striping (no redundancy) | 2         | None           | High Read/Write
RAID 1        | Mirroring                | 2         | 1 disk failure | Good Read, Normal Write
RAID 5        | Striping with Parity     | 3         | 1 disk failure | Good Read, Moderate Write
RAID 6        | Double Parity           | 4         | 2 disk failures| Good Read, Lower Write
RAID 10       | Mirror + Stripe         | 4         | Multiple disks | High Read/Write
</pre></div>
</div>
</section>
<section id="raid-0-striping">
<h4>RAID 0 - Striping</h4>
<p><strong>Characteristics:</strong>
* Data is striped across multiple disks
* No redundancy - failure of any disk results in total data loss
* Excellent performance for both reads and writes
* Full utilization of disk capacity</p>
<p><strong>Use Cases:</strong>
* High-performance applications
* Temporary data processing
* Non-critical data requiring high speed</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create RAID 0 with mdadm</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>/dev/md0<span class="w"> </span>--level<span class="o">=</span><span class="m">0</span><span class="w"> </span>--raid-devices<span class="o">=</span><span class="m">2</span><span class="w"> </span>/dev/sdb<span class="w"> </span>/dev/sdc

<span class="c1"># Format and mount</span>
sudo<span class="w"> </span>mkfs.ext4<span class="w"> </span>/dev/md0
sudo<span class="w"> </span>mkdir<span class="w"> </span>/mnt/raid0
sudo<span class="w"> </span>mount<span class="w"> </span>/dev/md0<span class="w"> </span>/mnt/raid0
</pre></div>
</div>
</section>
<section id="raid-1-mirroring">
<h4>RAID 1 - Mirroring</h4>
<p><strong>Characteristics:</strong>
* Data is mirrored across multiple disks
* Can survive failure of all but one disk
* Read performance can be improved
* Write performance is similar to single disk
* 50% storage efficiency</p>
<p><strong>Use Cases:</strong>
* Critical data requiring high availability
* Operating system partitions
* Database storage
* Boot drives</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create RAID 1 with mdadm</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>/dev/md1<span class="w"> </span>--level<span class="o">=</span><span class="m">1</span><span class="w"> </span>--raid-devices<span class="o">=</span><span class="m">2</span><span class="w"> </span>/dev/sdb<span class="w"> </span>/dev/sdc

<span class="c1"># Monitor RAID status</span>
cat<span class="w"> </span>/proc/mdstat

<span class="c1"># Check RAID details</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--detail<span class="w"> </span>/dev/md1
</pre></div>
</div>
</section>
<section id="raid-5-striping-with-parity">
<h4>RAID 5 - Striping with Parity</h4>
<p><strong>Characteristics:</strong>
* Data and parity information striped across all disks
* Can survive failure of one disk
* Good read performance
* Write performance penalty due to parity calculation
* Storage efficiency: (n-1)/n where n is number of disks</p>
<p><strong>Use Cases:</strong>
* General purpose storage
* File servers
* Backup storage
* Cost-effective redundancy</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create RAID 5 with 3 disks</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>/dev/md5<span class="w"> </span>--level<span class="o">=</span><span class="m">5</span><span class="w"> </span>--raid-devices<span class="o">=</span><span class="m">3</span><span class="w"> </span>/dev/sdb<span class="w"> </span>/dev/sdc<span class="w"> </span>/dev/sdd

<span class="c1"># Add spare disk</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--add<span class="w"> </span>/dev/md5<span class="w"> </span>/dev/sde
</pre></div>
</div>
</section>
<section id="raid-6-double-parity">
<h4>RAID 6 - Double Parity</h4>
<p><strong>Characteristics:</strong>
* Two parity blocks for each stripe
* Can survive failure of two disks
* Better fault tolerance than RAID 5
* Lower write performance than RAID 5
* Storage efficiency: (n-2)/n</p>
<p><strong>Use Cases:</strong>
* Large disk arrays
* Critical data with high availability requirements
* Long rebuild times scenarios
* Enterprise storage systems</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create RAID 6 with 4 disks</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>/dev/md6<span class="w"> </span>--level<span class="o">=</span><span class="m">6</span><span class="w"> </span>--raid-devices<span class="o">=</span><span class="m">4</span><span class="w"> </span>/dev/sdb<span class="w"> </span>/dev/sdc<span class="w"> </span>/dev/sdd<span class="w"> </span>/dev/sde
</pre></div>
</div>
</section>
<section id="raid-10-mirror-and-stripe">
<h4>RAID 10 - Mirror and Stripe</h4>
<p><strong>Characteristics:</strong>
* Combines RAID 1 (mirroring) and RAID 0 (striping)
* Excellent performance and redundancy
* Can survive multiple disk failures (in different mirror sets)
* 50% storage efficiency
* Fast rebuild times</p>
<p><strong>Use Cases:</strong>
* High-performance databases
* Virtual machine storage
* High-availability applications
* Enterprise critical data</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create RAID 10 with 4 disks</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>/dev/md10<span class="w"> </span>--level<span class="o">=</span><span class="m">10</span><span class="w"> </span>--raid-devices<span class="o">=</span><span class="m">4</span><span class="w"> </span>/dev/sdb<span class="w"> </span>/dev/sdc<span class="w"> </span>/dev/sdd<span class="w"> </span>/dev/sde
</pre></div>
</div>
</section>
</section>
<section id="setting-up-raid-on-ubuntu-22-04">
<h3>Setting Up RAID on Ubuntu 22.04</h3>
<section id="installing-raid-tools">
<h4>Installing RAID Tools</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install mdadm for software RAID</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>mdadm

<span class="c1"># Install additional tools</span>
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>smartmontools<span class="w"> </span>hdparm<span class="w"> </span>parted

<span class="c1"># Check available disks</span>
sudo<span class="w"> </span>fdisk<span class="w"> </span>-l
lsblk
</pre></div>
</div>
</section>
<section id="preparing-disks-for-raid">
<h4>Preparing Disks for RAID</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Wipe disk signatures (WARNING: This destroys data!)</span>
sudo<span class="w"> </span>wipefs<span class="w"> </span>-a<span class="w"> </span>/dev/sdb
sudo<span class="w"> </span>wipefs<span class="w"> </span>-a<span class="w"> </span>/dev/sdc

<span class="c1"># Create partitions (optional, can use whole disks)</span>
sudo<span class="w"> </span>parted<span class="w"> </span>/dev/sdb<span class="w"> </span>mklabel<span class="w"> </span>gpt
sudo<span class="w"> </span>parted<span class="w"> </span>/dev/sdb<span class="w"> </span>mkpart<span class="w"> </span>primary<span class="w"> </span><span class="m">0</span>%<span class="w"> </span><span class="m">100</span>%
sudo<span class="w"> </span>parted<span class="w"> </span>/dev/sdb<span class="w"> </span><span class="nb">set</span><span class="w"> </span><span class="m">1</span><span class="w"> </span>raid<span class="w"> </span>on

<span class="c1"># Verify no existing RAID metadata</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--examine<span class="w"> </span>/dev/sdb
sudo<span class="w"> </span>mdadm<span class="w"> </span>--examine<span class="w"> </span>/dev/sdc
</pre></div>
</div>
</section>
<section id="creating-raid-arrays">
<h4>Creating RAID Arrays</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create RAID 1 array</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>--verbose<span class="w"> </span>/dev/md0<span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>--level<span class="o">=</span><span class="m">1</span><span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>--raid-devices<span class="o">=</span><span class="m">2</span><span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>/dev/sdb<span class="w"> </span>/dev/sdc

<span class="c1"># Create RAID 5 array with spare</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>--verbose<span class="w"> </span>/dev/md1<span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>--level<span class="o">=</span><span class="m">5</span><span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>--raid-devices<span class="o">=</span><span class="m">3</span><span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>--spare-devices<span class="o">=</span><span class="m">1</span><span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>/dev/sdb<span class="w"> </span>/dev/sdc<span class="w"> </span>/dev/sdd<span class="w"> </span>/dev/sde

<span class="c1"># Save RAID configuration</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--detail<span class="w"> </span>--scan<span class="w"> </span><span class="p">|</span><span class="w"> </span>sudo<span class="w"> </span>tee<span class="w"> </span>-a<span class="w"> </span>/etc/mdadm/mdadm.conf

<span class="c1"># Update initramfs</span>
sudo<span class="w"> </span>update-initramfs<span class="w"> </span>-u
</pre></div>
</div>
</section>
</section>
<section id="raid-management-and-monitoring">
<h3>RAID Management and Monitoring</h3>
<section id="monitoring-raid-status">
<h4>Monitoring RAID Status</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Check RAID status</span>
cat<span class="w"> </span>/proc/mdstat

<span class="c1"># Detailed RAID information</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--detail<span class="w"> </span>/dev/md0

<span class="c1"># Monitor RAID in real-time</span>
watch<span class="w"> </span>cat<span class="w"> </span>/proc/mdstat

<span class="c1"># Check individual disk health</span>
sudo<span class="w"> </span>smartctl<span class="w"> </span>-a<span class="w"> </span>/dev/sdb
</pre></div>
</div>
</section>
<section id="raid-maintenance-operations">
<h4>RAID Maintenance Operations</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Add a disk to RAID array</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--add<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdd

<span class="c1"># Remove a disk from RAID array</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--remove<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdd

<span class="c1"># Mark a disk as failed</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--fail<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdb

<span class="c1"># Replace a failed disk</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--remove<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdb
<span class="c1"># Physically replace disk</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--add<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdb

<span class="c1"># Grow RAID array (add more disks)</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--grow<span class="w"> </span>/dev/md0<span class="w"> </span>--raid-devices<span class="o">=</span><span class="m">3</span><span class="w"> </span>--add<span class="w"> </span>/dev/sdd

<span class="c1"># Reshape RAID array</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--grow<span class="w"> </span>/dev/md0<span class="w"> </span>--level<span class="o">=</span><span class="m">6</span>
</pre></div>
</div>
</section>
</section>
<section id="raid-performance-optimization">
<h3>RAID Performance Optimization</h3>
<section id="stripe-size-optimization">
<h4>Stripe Size Optimization</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Create RAID with custom chunk size</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>/dev/md0<span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>--level<span class="o">=</span><span class="m">5</span><span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>--chunk<span class="o">=</span><span class="m">64</span><span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>--raid-devices<span class="o">=</span><span class="m">3</span><span class="w"> </span><span class="se">\\</span>
<span class="w">    </span>/dev/sdb<span class="w"> </span>/dev/sdc<span class="w"> </span>/dev/sdd

<span class="c1"># Test different chunk sizes for your workload</span>
<span class="k">for</span><span class="w"> </span>chunk<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">32</span><span class="w"> </span><span class="m">64</span><span class="w"> </span><span class="m">128</span><span class="w"> </span><span class="m">256</span><span class="w"> </span><span class="m">512</span><span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Testing chunk size: </span><span class="nv">$chunk</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="c1"># Create test array and measure performance</span>
<span class="k">done</span>
</pre></div>
</div>
</section>
<section id="i-o-scheduler-optimization">
<h4>I/O Scheduler Optimization</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Set I/O scheduler for RAID devices</span>
<span class="nb">echo</span><span class="w"> </span>mq-deadline<span class="w"> </span><span class="p">|</span><span class="w"> </span>sudo<span class="w"> </span>tee<span class="w"> </span>/sys/block/md0/queue/scheduler

<span class="c1"># Optimize readahead</span>
sudo<span class="w"> </span>blockdev<span class="w"> </span>--setra<span class="w"> </span><span class="m">65536</span><span class="w"> </span>/dev/md0

<span class="c1"># Disable barriers for better performance (if UPS protected)</span>
sudo<span class="w"> </span>mount<span class="w"> </span>-o<span class="w"> </span><span class="nv">barrier</span><span class="o">=</span><span class="m">0</span><span class="w"> </span>/dev/md0<span class="w"> </span>/mnt/raid
</pre></div>
</div>
</section>
<section id="filesystem-considerations">
<h4>Filesystem Considerations</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Align filesystem to RAID geometry</span>
<span class="c1"># For RAID 5 with 3 disks and 64K chunk size:</span>
<span class="c1"># Stripe width = (disks - parity) * chunk_size = 2 * 64K = 128K</span>

sudo<span class="w"> </span>mkfs.ext4<span class="w"> </span>-E<span class="w"> </span><span class="nv">stride</span><span class="o">=</span><span class="m">16</span>,stripe-width<span class="o">=</span><span class="m">32</span><span class="w"> </span>/dev/md0

<span class="c1"># For XFS on RAID</span>
sudo<span class="w"> </span>mkfs.xfs<span class="w"> </span>-d<span class="w"> </span><span class="nv">su</span><span class="o">=</span><span class="m">65536</span>,sw<span class="o">=</span><span class="m">2</span><span class="w"> </span>/dev/md0
</pre></div>
</div>
</section>
</section>
<section id="frequently-asked-questions">
<h3>Frequently Asked Questions</h3>
<section id="q-which-raid-level-should-i-choose-for-my-use-case">
<h4>Q: Which RAID level should I choose for my use case?</h4>
<p><strong>A:</strong> Choose based on your priorities:</p>
<div class="highlight-text notranslate"><div class="highlight"><pre><span></span>Priority              | Recommended RAID
---------------------|------------------
Maximum Performance  | RAID 0 (no redundancy)
High Availability    | RAID 1 or RAID 10
Balanced Performance | RAID 5
Maximum Protection   | RAID 6
Performance + Safety | RAID 10
</pre></div>
</div>
</section>
<section id="q-can-i-convert-between-raid-levels">
<h4>Q: Can I convert between RAID levels?</h4>
<p><strong>A:</strong> Yes, but with limitations:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Convert RAID 1 to RAID 5 (requires adding disks first)</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--add<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdd
sudo<span class="w"> </span>mdadm<span class="w"> </span>--grow<span class="w"> </span>/dev/md0<span class="w"> </span>--level<span class="o">=</span><span class="m">5</span><span class="w"> </span>--raid-devices<span class="o">=</span><span class="m">3</span>

<span class="c1"># Convert RAID 5 to RAID 6</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--grow<span class="w"> </span>/dev/md0<span class="w"> </span>--level<span class="o">=</span><span class="m">6</span><span class="w"> </span>--raid-devices<span class="o">=</span><span class="m">4</span><span class="w"> </span>--add<span class="w"> </span>/dev/sde

<span class="c1"># Note: Always backup data before conversion!</span>
</pre></div>
</div>
</section>
<section id="q-how-do-i-recover-from-a-raid-failure">
<h4>Q: How do I recover from a RAID failure?</h4>
<p><strong>A:</strong> Recovery steps depend on the failure type:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># For single disk failure in RAID 1/5/6:</span>
<span class="c1"># 1. Replace failed disk</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--remove<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdb<span class="w">  </span><span class="c1"># Remove failed disk</span>
<span class="c1"># 2. Add new disk</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--add<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdb

<span class="c1"># For array corruption:</span>
<span class="c1"># 1. Stop array</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--stop<span class="w"> </span>/dev/md0
<span class="c1"># 2. Assemble with force</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--assemble<span class="w"> </span>--force<span class="w"> </span>/dev/md0<span class="w"> </span>/dev/sdb<span class="w"> </span>/dev/sdc

<span class="c1"># For complete array loss:</span>
<span class="c1"># 1. Try to recreate array with same parameters</span>
<span class="c1"># 2. Use data recovery tools</span>
<span class="c1"># 3. Restore from backup</span>
</pre></div>
</div>
</section>
<section id="q-how-do-i-monitor-raid-health-automatically">
<h4>Q: How do I monitor RAID health automatically?</h4>
<p><strong>A:</strong> Set up automated monitoring:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Configure mdadm monitoring</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;MAILADDR admin@example.com&quot;</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>sudo<span class="w"> </span>tee<span class="w"> </span>-a<span class="w"> </span>/etc/mdadm/mdadm.conf

<span class="c1"># Test email notification</span>
sudo<span class="w"> </span>mdadm<span class="w"> </span>--monitor<span class="w"> </span>--test<span class="w"> </span>/dev/md0

<span class="c1"># Set up continuous monitoring service</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>mdmonitor
sudo<span class="w"> </span>systemctl<span class="w"> </span>start<span class="w"> </span>mdmonitor
</pre></div>
</div>
</section>
</section>
<section id="coding-examples">
<h3>Coding Examples</h3>
<section id="python-raid-monitoring-script">
<h4>Python RAID Monitoring Script</h4>
<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="ch">#!/usr/bin/env python3</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">RAID monitoring and management script for Ubuntu 22.04</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">subprocess</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">re</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">json</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">time</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">smtplib</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">email.mime.text</span><span class="w"> </span><span class="kn">import</span> <span class="n">MIMEText</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">datetime</span><span class="w"> </span><span class="kn">import</span> <span class="n">datetime</span>

<span class="k">class</span><span class="w"> </span><span class="nc">RAIDMonitor</span><span class="p">:</span>
    <span class="k">def</span><span class="w"> </span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">raid_devices</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">discover_raid_devices</span><span class="p">()</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">discover_raid_devices</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Discover all RAID devices on the system&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;cat&#39;</span><span class="p">,</span> <span class="s1">&#39;/proc/mdstat&#39;</span><span class="p">],</span>
                                  <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

            <span class="n">devices</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">n&#39;</span><span class="p">):</span>
                <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;md&#39;</span><span class="p">):</span>
                    <span class="n">device_name</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
                    <span class="n">devices</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;/dev/</span><span class="si">{</span><span class="n">device_name</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>

            <span class="k">return</span> <span class="n">devices</span>
        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Error discovering RAID devices: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
            <span class="k">return</span> <span class="p">[]</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">get_raid_status</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">device</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Get detailed status of a RAID device&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;mdadm&#39;</span><span class="p">,</span> <span class="s1">&#39;--detail&#39;</span><span class="p">,</span> <span class="n">device</span><span class="p">],</span>
                                  <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

            <span class="k">if</span> <span class="n">result</span><span class="o">.</span><span class="n">returncode</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
                <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;error&#39;</span><span class="p">:</span> <span class="sa">f</span><span class="s1">&#39;Failed to get status for </span><span class="si">{</span><span class="n">device</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">}</span>

            <span class="n">status</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;device&#39;</span><span class="p">:</span> <span class="n">device</span><span class="p">,</span> <span class="s1">&#39;healthy&#39;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span> <span class="s1">&#39;details&#39;</span><span class="p">:</span> <span class="p">{}}</span>

            <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">n&#39;</span><span class="p">):</span>
                <span class="n">line</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>

                <span class="k">if</span> <span class="s1">&#39;State :&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">state</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
                    <span class="n">status</span><span class="p">[</span><span class="s1">&#39;details&#39;</span><span class="p">][</span><span class="s1">&#39;state&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">state</span>
                    <span class="k">if</span> <span class="s1">&#39;clean&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">state</span><span class="o">.</span><span class="n">lower</span><span class="p">():</span>
                        <span class="n">status</span><span class="p">[</span><span class="s1">&#39;healthy&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>

                <span class="k">elif</span> <span class="s1">&#39;RAID Level :&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">status</span><span class="p">[</span><span class="s1">&#39;details&#39;</span><span class="p">][</span><span class="s1">&#39;level&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>

                <span class="k">elif</span> <span class="s1">&#39;Array Size :&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">status</span><span class="p">[</span><span class="s1">&#39;details&#39;</span><span class="p">][</span><span class="s1">&#39;size&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>

                <span class="k">elif</span> <span class="s1">&#39;Used Dev Size :&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">status</span><span class="p">[</span><span class="s1">&#39;details&#39;</span><span class="p">][</span><span class="s1">&#39;used_size&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>

                <span class="k">elif</span> <span class="s1">&#39;Active Devices :&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">status</span><span class="p">[</span><span class="s1">&#39;details&#39;</span><span class="p">][</span><span class="s1">&#39;active_devices&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>

                <span class="k">elif</span> <span class="s1">&#39;Working Devices :&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">status</span><span class="p">[</span><span class="s1">&#39;details&#39;</span><span class="p">][</span><span class="s1">&#39;working_devices&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>

                <span class="k">elif</span> <span class="s1">&#39;Failed Devices :&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">failed</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>
                    <span class="n">status</span><span class="p">[</span><span class="s1">&#39;details&#39;</span><span class="p">][</span><span class="s1">&#39;failed_devices&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">failed</span>
                    <span class="k">if</span> <span class="n">failed</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
                        <span class="n">status</span><span class="p">[</span><span class="s1">&#39;healthy&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>

            <span class="k">return</span> <span class="n">status</span>

        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;device&#39;</span><span class="p">:</span> <span class="n">device</span><span class="p">,</span> <span class="s1">&#39;error&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)}</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">get_disk_health</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">device</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Check individual disk health using SMART&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;smartctl&#39;</span><span class="p">,</span> <span class="s1">&#39;-H&#39;</span><span class="p">,</span> <span class="n">device</span><span class="p">],</span>
                                  <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

            <span class="k">if</span> <span class="s1">&#39;PASSED&#39;</span> <span class="ow">in</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="p">:</span>
                <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;device&#39;</span><span class="p">:</span> <span class="n">device</span><span class="p">,</span> <span class="s1">&#39;smart_status&#39;</span><span class="p">:</span> <span class="s1">&#39;PASSED&#39;</span><span class="p">,</span> <span class="s1">&#39;healthy&#39;</span><span class="p">:</span> <span class="kc">True</span><span class="p">}</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;device&#39;</span><span class="p">:</span> <span class="n">device</span><span class="p">,</span> <span class="s1">&#39;smart_status&#39;</span><span class="p">:</span> <span class="s1">&#39;FAILED&#39;</span><span class="p">,</span> <span class="s1">&#39;healthy&#39;</span><span class="p">:</span> <span class="kc">False</span><span class="p">}</span>

        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;device&#39;</span><span class="p">:</span> <span class="n">device</span><span class="p">,</span> <span class="s1">&#39;error&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)}</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">check_array_sync</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">device</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Check if array is currently syncing/rebuilding&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;/proc/mdstat&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
                <span class="n">content</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>

            <span class="n">device_name</span> <span class="o">=</span> <span class="n">device</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>

            <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">content</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">n&#39;</span><span class="p">):</span>
                <span class="k">if</span> <span class="n">device_name</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="k">if</span> <span class="s1">&#39;resync&#39;</span> <span class="ow">in</span> <span class="n">line</span> <span class="ow">or</span> <span class="s1">&#39;recovery&#39;</span> <span class="ow">in</span> <span class="n">line</span> <span class="ow">or</span> <span class="s1">&#39;rebuild&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                        <span class="c1"># Extract progress if available</span>
                        <span class="n">progress_match</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">[([^</span><span class="se">\\</span><span class="s1">]]+)</span><span class="se">\\</span><span class="s1">]&#39;</span><span class="p">,</span> <span class="n">line</span><span class="p">)</span>
                        <span class="k">if</span> <span class="n">progress_match</span><span class="p">:</span>
                            <span class="k">return</span> <span class="p">{</span>
                                <span class="s1">&#39;syncing&#39;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span>
                                <span class="s1">&#39;progress&#39;</span><span class="p">:</span> <span class="n">progress_match</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span>
                                <span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
                            <span class="p">}</span>
                        <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;syncing&#39;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span> <span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()}</span>

            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;syncing&#39;</span><span class="p">:</span> <span class="kc">False</span><span class="p">}</span>

        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;error&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)}</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">generate_report</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Generate comprehensive RAID status report&quot;&quot;&quot;</span>
        <span class="n">report</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s1">&#39;timestamp&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">isoformat</span><span class="p">(),</span>
            <span class="s1">&#39;hostname&#39;</span><span class="p">:</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;hostname&#39;</span><span class="p">],</span> <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">strip</span><span class="p">(),</span>
            <span class="s1">&#39;raid_devices&#39;</span><span class="p">:</span> <span class="p">[],</span>
            <span class="s1">&#39;overall_health&#39;</span><span class="p">:</span> <span class="kc">True</span>
        <span class="p">}</span>

        <span class="k">for</span> <span class="n">device</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">raid_devices</span><span class="p">:</span>
            <span class="n">device_status</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_raid_status</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
            <span class="n">sync_status</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_array_sync</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>

            <span class="n">device_report</span> <span class="o">=</span> <span class="p">{</span>
                <span class="s1">&#39;device&#39;</span><span class="p">:</span> <span class="n">device</span><span class="p">,</span>
                <span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="n">device_status</span><span class="p">,</span>
                <span class="s1">&#39;sync&#39;</span><span class="p">:</span> <span class="n">sync_status</span>
            <span class="p">}</span>

            <span class="k">if</span> <span class="ow">not</span> <span class="n">device_status</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;healthy&#39;</span><span class="p">,</span> <span class="kc">False</span><span class="p">):</span>
                <span class="n">report</span><span class="p">[</span><span class="s1">&#39;overall_health&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>

            <span class="n">report</span><span class="p">[</span><span class="s1">&#39;raid_devices&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">device_report</span><span class="p">)</span>

        <span class="k">return</span> <span class="n">report</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">send_alert</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">message</span><span class="p">,</span> <span class="n">subject</span><span class="o">=</span><span class="s2">&quot;RAID Alert&quot;</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Send email alert (requires SMTP configuration)&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="c1"># Configure SMTP settings</span>
            <span class="n">smtp_server</span> <span class="o">=</span> <span class="s2">&quot;localhost&quot;</span>
            <span class="n">smtp_port</span> <span class="o">=</span> <span class="mi">587</span>
            <span class="n">from_email</span> <span class="o">=</span> <span class="s2">&quot;raid-monitor@localhost&quot;</span>
            <span class="n">to_email</span> <span class="o">=</span> <span class="s2">&quot;admin@localhost&quot;</span>

            <span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEText</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
            <span class="n">msg</span><span class="p">[</span><span class="s1">&#39;Subject&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">subject</span>
            <span class="n">msg</span><span class="p">[</span><span class="s1">&#39;From&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">from_email</span>
            <span class="n">msg</span><span class="p">[</span><span class="s1">&#39;To&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">to_email</span>

            <span class="n">server</span> <span class="o">=</span> <span class="n">smtplib</span><span class="o">.</span><span class="n">SMTP</span><span class="p">(</span><span class="n">smtp_server</span><span class="p">,</span> <span class="n">smtp_port</span><span class="p">)</span>
            <span class="n">server</span><span class="o">.</span><span class="n">send_message</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
            <span class="n">server</span><span class="o">.</span><span class="n">quit</span><span class="p">()</span>

            <span class="k">return</span> <span class="kc">True</span>
        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Failed to send alert: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
            <span class="k">return</span> <span class="kc">False</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">monitor_continuous</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">interval</span><span class="o">=</span><span class="mi">300</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Continuous monitoring with specified interval (seconds)&quot;&quot;&quot;</span>
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Starting RAID monitoring (checking every </span><span class="si">{</span><span class="n">interval</span><span class="si">}</span><span class="s2"> seconds)&quot;</span><span class="p">)</span>

        <span class="k">while</span> <span class="kc">True</span><span class="p">:</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">report</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">generate_report</span><span class="p">()</span>

                <span class="k">if</span> <span class="ow">not</span> <span class="n">report</span><span class="p">[</span><span class="s1">&#39;overall_health&#39;</span><span class="p">]:</span>
                    <span class="n">alert_message</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&quot;RAID Health Alert - </span><span class="si">{</span><span class="n">report</span><span class="p">[</span><span class="s1">&#39;hostname&#39;</span><span class="p">]</span><span class="si">}</span><span class="se">\\</span><span class="s2">n</span><span class="se">\\</span><span class="s2">n&quot;</span>
                    <span class="n">alert_message</span> <span class="o">+=</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">report</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

                    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;ALERT: RAID issues detected at </span><span class="si">{</span><span class="n">report</span><span class="p">[</span><span class="s1">&#39;timestamp&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">send_alert</span><span class="p">(</span><span class="n">alert_message</span><span class="p">,</span> <span class="s2">&quot;RAID Health Alert&quot;</span><span class="p">)</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;All RAID devices healthy at </span><span class="si">{</span><span class="n">report</span><span class="p">[</span><span class="s1">&#39;timestamp&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>

                <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">interval</span><span class="p">)</span>

            <span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
                <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\\</span><span class="s2">nMonitoring stopped by user&quot;</span><span class="p">)</span>
                <span class="k">break</span>
            <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Error during monitoring: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
                <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">interval</span><span class="p">)</span>

<span class="c1"># Example usage and CLI interface</span>
<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="kn">import</span><span class="w"> </span><span class="nn">argparse</span>

    <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;RAID Monitoring Tool&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--monitor&#39;</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">&#39;store_true&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Start continuous monitoring&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--report&#39;</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">&#39;store_true&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Generate one-time report&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--device&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Check specific device&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--interval&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">300</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Monitoring interval in seconds&#39;</span><span class="p">)</span>

    <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>

    <span class="n">monitor</span> <span class="o">=</span> <span class="n">RAIDMonitor</span><span class="p">()</span>

    <span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">monitor</span><span class="p">:</span>
        <span class="n">monitor</span><span class="o">.</span><span class="n">monitor_continuous</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">interval</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">args</span><span class="o">.</span><span class="n">report</span><span class="p">:</span>
        <span class="n">report</span> <span class="o">=</span> <span class="n">monitor</span><span class="o">.</span><span class="n">generate_report</span><span class="p">()</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">report</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
    <span class="k">elif</span> <span class="n">args</span><span class="o">.</span><span class="n">device</span><span class="p">:</span>
        <span class="n">status</span> <span class="o">=</span> <span class="n">monitor</span><span class="o">.</span><span class="n">get_raid_status</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">device</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">status</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="c1"># Default: show brief status</span>
        <span class="k">for</span> <span class="n">device</span> <span class="ow">in</span> <span class="n">monitor</span><span class="o">.</span><span class="n">raid_devices</span><span class="p">:</span>
            <span class="n">status</span> <span class="o">=</span> <span class="n">monitor</span><span class="o">.</span><span class="n">get_raid_status</span><span class="p">(</span><span class="n">device</span><span class="p">)</span>
            <span class="n">health</span> <span class="o">=</span> <span class="s2">&quot;HEALTHY&quot;</span> <span class="k">if</span> <span class="n">status</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;healthy&#39;</span><span class="p">,</span> <span class="kc">False</span><span class="p">)</span> <span class="k">else</span> <span class="s2">&quot;UNHEALTHY&quot;</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;</span><span class="si">{</span><span class="n">device</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">health</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</pre></div>
</div>
</section>
<section id="bash-raid-management-script">
<h4>Bash RAID Management Script</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
<span class="c1"># raid_manager.sh - Comprehensive RAID management for Ubuntu 22.04</span>

<span class="c1"># Configuration</span>
<span class="nv">CONFIG_FILE</span><span class="o">=</span><span class="s2">&quot;/etc/raid_manager.conf&quot;</span>
<span class="nv">LOG_FILE</span><span class="o">=</span><span class="s2">&quot;/var/log/raid_manager.log&quot;</span>
<span class="nv">ALERT_EMAIL</span><span class="o">=</span><span class="s2">&quot;admin@localhost&quot;</span>

<span class="c1"># Colors for output</span>
<span class="nv">RED</span><span class="o">=</span><span class="s1">&#39;\033[0;31m&#39;</span>
<span class="nv">GREEN</span><span class="o">=</span><span class="s1">&#39;\033[0;32m&#39;</span>
<span class="nv">YELLOW</span><span class="o">=</span><span class="s1">&#39;\033[1;33m&#39;</span>
<span class="nv">BLUE</span><span class="o">=</span><span class="s1">&#39;\033[0;34m&#39;</span>
<span class="nv">NC</span><span class="o">=</span><span class="s1">&#39;\033[0m&#39;</span>

<span class="c1"># Logging function</span>
log_message<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;</span><span class="k">$(</span>date<span class="w"> </span><span class="s1">&#39;+%Y-%m-%d %H:%M:%S&#39;</span><span class="k">)</span><span class="s2"> - </span><span class="nv">$1</span><span class="s2">&quot;</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>tee<span class="w"> </span>-a<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$LOG_FILE</span><span class="s2">&quot;</span>
<span class="o">}</span>

<span class="c1"># Check if running as root</span>
check_root<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="nv">$EUID</span><span class="w"> </span>-ne<span class="w"> </span><span class="m">0</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">This script must be run as root</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">        </span><span class="nb">exit</span><span class="w"> </span><span class="m">1</span>
<span class="w">    </span><span class="k">fi</span>
<span class="o">}</span>

<span class="c1"># Install required packages</span>
install_dependencies<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BLUE</span><span class="si">}</span><span class="s2">Installing RAID dependencies...</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span>apt<span class="w"> </span>update
<span class="w">    </span>apt<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>mdadm<span class="w"> </span>smartmontools<span class="w"> </span>parted<span class="w"> </span>gdisk<span class="w"> </span>mail-utils

<span class="w">    </span><span class="c1"># Enable mdadm monitoring</span>
<span class="w">    </span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>mdmonitor
<span class="w">    </span>systemctl<span class="w"> </span>start<span class="w"> </span>mdmonitor

<span class="w">    </span>log_message<span class="w"> </span><span class="s2">&quot;RAID dependencies installed&quot;</span>
<span class="o">}</span>

<span class="c1"># Discover RAID devices</span>
discover_raids<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BLUE</span><span class="si">}</span><span class="s2">=== Discovered RAID Devices ===</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-f<span class="w"> </span>/proc/mdstat<span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">        </span>cat<span class="w"> </span>/proc/mdstat
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>

<span class="w">        </span><span class="c1"># List detailed information for each device</span>
<span class="w">        </span><span class="k">for</span><span class="w"> </span>device<span class="w"> </span><span class="k">in</span><span class="w"> </span>/dev/md*<span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-b<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">Details for </span><span class="nv">$device</span><span class="s2">:</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span>mdadm<span class="w"> </span>--detail<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="m">2</span>&gt;/dev/null<span class="w"> </span><span class="p">|</span><span class="w"> </span>head<span class="w"> </span>-20
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">        </span><span class="k">done</span>
<span class="w">    </span><span class="k">else</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;No RAID devices found&quot;</span>
<span class="w">    </span><span class="k">fi</span>
<span class="o">}</span>

<span class="c1"># Create RAID array</span>
create_raid<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">level</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">devices</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$2</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">array_name</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$3</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$level</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$devices</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Usage: create_raid &lt;level&gt; &lt;device1,device2,...&gt; [array_name]&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Example: create_raid 1 /dev/sdb,/dev/sdc myraid&quot;</span>
<span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">    </span><span class="k">fi</span>

<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">device_array</span><span class="o">=(</span><span class="si">${</span><span class="nv">devices</span><span class="p">//,/ </span><span class="si">}</span><span class="o">)</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">device_count</span><span class="o">=</span><span class="si">${#</span><span class="nv">device_array</span><span class="p">[@]</span><span class="si">}</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">raid_device</span><span class="o">=</span><span class="s2">&quot;/dev/md</span><span class="si">${</span><span class="nv">array_name</span><span class="k">:-$(</span>date<span class="w"> </span>+%s<span class="k">)</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">YELLOW</span><span class="si">}</span><span class="s2">Creating RAID </span><span class="nv">$level</span><span class="s2"> with </span><span class="nv">$device_count</span><span class="s2"> devices</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="c1"># Validate RAID level and device count</span>
<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$level</span><span class="s2">&quot;</span><span class="w"> </span><span class="k">in</span>
<span class="w">        </span><span class="s2">&quot;0&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="nv">$device_count</span><span class="w"> </span>-lt<span class="w"> </span><span class="m">2</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">RAID 0 requires at least 2 devices</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>
<span class="w">        </span><span class="s2">&quot;1&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="nv">$device_count</span><span class="w"> </span>-lt<span class="w"> </span><span class="m">2</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">RAID 1 requires at least 2 devices</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>
<span class="w">        </span><span class="s2">&quot;5&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="nv">$device_count</span><span class="w"> </span>-lt<span class="w"> </span><span class="m">3</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">RAID 5 requires at least 3 devices</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>
<span class="w">        </span><span class="s2">&quot;6&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="nv">$device_count</span><span class="w"> </span>-lt<span class="w"> </span><span class="m">4</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">RAID 6 requires at least 4 devices</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>
<span class="w">        </span><span class="s2">&quot;10&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="nv">$device_count</span><span class="w"> </span>-lt<span class="w"> </span><span class="m">4</span><span class="w"> </span><span class="o">]]</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="k">$((</span><span class="nv">device_count</span><span class="w"> </span><span class="o">%</span><span class="w"> </span><span class="m">2</span><span class="k">))</span><span class="w"> </span>-ne<span class="w"> </span><span class="m">0</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">RAID 10 requires at least 4 devices (even number)</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>
<span class="w">        </span>*<span class="o">)</span>
<span class="w">            </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">Unsupported RAID level: </span><span class="nv">$level</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="p">;;</span>
<span class="w">    </span><span class="k">esac</span>

<span class="w">    </span><span class="c1"># Prepare devices</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Preparing devices...&quot;</span>
<span class="w">    </span><span class="k">for</span><span class="w"> </span>device<span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">device_array</span><span class="p">[@]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Wiping </span><span class="nv">$device</span><span class="s2">...&quot;</span>
<span class="w">        </span>wipefs<span class="w"> </span>-a<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span>

<span class="w">        </span><span class="c1"># Zero superblock if exists</span>
<span class="w">        </span>mdadm<span class="w"> </span>--zero-superblock<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="m">2</span>&gt;/dev/null
<span class="w">    </span><span class="k">done</span>

<span class="w">    </span><span class="c1"># Create RAID array</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Creating RAID array...&quot;</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span>mdadm<span class="w"> </span>--create<span class="w"> </span>--verbose<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$raid_device</span><span class="s2">&quot;</span><span class="w"> </span><span class="se">\\</span>
<span class="w">        </span>--level<span class="o">=</span><span class="s2">&quot;</span><span class="nv">$level</span><span class="s2">&quot;</span><span class="w"> </span><span class="se">\\</span>
<span class="w">        </span>--raid-devices<span class="o">=</span><span class="s2">&quot;</span><span class="nv">$device_count</span><span class="s2">&quot;</span><span class="w"> </span><span class="se">\\</span>
<span class="w">        </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">device_array</span><span class="p">[@]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>

<span class="w">        </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">RAID array created successfully: </span><span class="nv">$raid_device</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">        </span><span class="c1"># Save configuration</span>
<span class="w">        </span>mdadm<span class="w"> </span>--detail<span class="w"> </span>--scan<span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/mdadm/mdadm.conf
<span class="w">        </span>update-initramfs<span class="w"> </span>-u

<span class="w">        </span>log_message<span class="w"> </span><span class="s2">&quot;Created RAID </span><span class="nv">$level</span><span class="s2"> array </span><span class="nv">$raid_device</span><span class="s2"> with devices: </span><span class="nv">$devices</span><span class="s2">&quot;</span>

<span class="w">        </span><span class="c1"># Wait for array to synchronize</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Waiting for initial synchronization...&quot;</span>
<span class="w">        </span><span class="k">while</span><span class="w"> </span>grep<span class="w"> </span>-q<span class="w"> </span><span class="s2">&quot;resync&quot;</span><span class="w"> </span>/proc/mdstat<span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">            </span><span class="nb">echo</span><span class="w"> </span>-n<span class="w"> </span><span class="s2">&quot;.&quot;</span>
<span class="w">            </span>sleep<span class="w"> </span><span class="m">5</span>
<span class="w">        </span><span class="k">done</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">Initial synchronization complete</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="k">else</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">Failed to create RAID array</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">    </span><span class="k">fi</span>
<span class="o">}</span>

<span class="c1"># Monitor RAID health</span>
monitor_raid_health<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BLUE</span><span class="si">}</span><span class="s2">=== RAID Health Monitor ===</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">unhealthy_found</span><span class="o">=</span><span class="nb">false</span>

<span class="w">    </span><span class="c1"># Check each RAID device</span>
<span class="w">    </span><span class="k">for</span><span class="w"> </span>device<span class="w"> </span><span class="k">in</span><span class="w"> </span>/dev/md*<span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-b<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">            </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Checking </span><span class="nv">$device</span><span class="s2">...&quot;</span>

<span class="w">            </span><span class="c1"># Get RAID status</span>
<span class="w">            </span><span class="nb">local</span><span class="w"> </span><span class="nv">status</span><span class="o">=</span><span class="k">$(</span>mdadm<span class="w"> </span>--detail<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="m">2</span>&gt;/dev/null<span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span><span class="s2">&quot;State :&quot;</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>awk<span class="w"> </span><span class="s1">&#39;{print $3}&#39;</span><span class="k">)</span>

<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$status</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;clean&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="nv">$device</span><span class="s2">: Healthy (</span><span class="nv">$status</span><span class="s2">)</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">else</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="nv">$device</span><span class="s2">: Unhealthy (</span><span class="nv">$status</span><span class="s2">)</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span><span class="nv">unhealthy_found</span><span class="o">=</span><span class="nb">true</span>

<span class="w">                </span><span class="c1"># Get detailed information</span>
<span class="w">                </span>mdadm<span class="w"> </span>--detail<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">fi</span>

<span class="w">            </span><span class="c1"># Check for rebuild/resync</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span>grep<span class="w"> </span>-q<span class="w"> </span><span class="s2">&quot;</span><span class="k">$(</span>basename<span class="w"> </span><span class="nv">$device</span><span class="k">)</span><span class="s2">&quot;</span><span class="w"> </span>/proc/mdstat<span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">local</span><span class="w"> </span><span class="nv">sync_info</span><span class="o">=</span><span class="k">$(</span>grep<span class="w"> </span><span class="s2">&quot;</span><span class="k">$(</span>basename<span class="w"> </span><span class="nv">$device</span><span class="k">)</span><span class="s2">&quot;</span><span class="w"> </span>/proc/mdstat<span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span>-E<span class="w"> </span><span class="s2">&quot;(resync|rebuild|recovery)&quot;</span><span class="k">)</span>
<span class="w">                </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-n<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$sync_info</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">YELLOW</span><span class="si">}</span><span class="nv">$device</span><span class="s2">: </span><span class="nv">$sync_info</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span><span class="k">fi</span>
<span class="w">            </span><span class="k">fi</span>

<span class="w">            </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">        </span><span class="k">fi</span>
<span class="w">    </span><span class="k">done</span>

<span class="w">    </span><span class="c1"># Check individual disk health</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BLUE</span><span class="si">}</span><span class="s2">=== Individual Disk Health ===</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="k">for</span><span class="w"> </span>device<span class="w"> </span><span class="k">in</span><span class="w"> </span>/dev/sd<span class="o">[</span>a-z<span class="o">]</span><span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-b<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">            </span><span class="nb">local</span><span class="w"> </span><span class="nv">smart_status</span><span class="o">=</span><span class="k">$(</span>smartctl<span class="w"> </span>-H<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="m">2</span>&gt;/dev/null<span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span><span class="s2">&quot;SMART overall-health&quot;</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>awk<span class="w"> </span><span class="s1">&#39;{print $6}&#39;</span><span class="k">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$smart_status</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;PASSED&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="nv">$device</span><span class="s2">: SMART PASSED</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">elif</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$smart_status</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;FAILED&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="nv">$device</span><span class="s2">: SMART FAILED</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span><span class="nv">unhealthy_found</span><span class="o">=</span><span class="nb">true</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">        </span><span class="k">fi</span>
<span class="w">    </span><span class="k">done</span>

<span class="w">    </span><span class="c1"># Send alert if issues found</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$unhealthy_found</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">&quot;true&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">        </span>log_message<span class="w"> </span><span class="s2">&quot;RAID health issues detected&quot;</span>
<span class="w">        </span>send_alert<span class="w"> </span><span class="s2">&quot;RAID health issues detected on </span><span class="k">$(</span>hostname<span class="k">)</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="k">fi</span>
<span class="o">}</span>

<span class="c1"># Manage RAID device</span>
manage_raid<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">action</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">device</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$2</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">target</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$3</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="k">case</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$action</span><span class="s2">&quot;</span><span class="w"> </span><span class="k">in</span>
<span class="w">        </span><span class="s2">&quot;add&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$target</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Usage: manage_raid add &lt;raid_device&gt; &lt;new_disk&gt;&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>

<span class="w">            </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">YELLOW</span><span class="si">}</span><span class="s2">Adding </span><span class="nv">$target</span><span class="s2"> to </span><span class="nv">$device</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span>mdadm<span class="w"> </span>--add<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$target</span><span class="s2">&quot;</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">Disk added successfully</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span>log_message<span class="w"> </span><span class="s2">&quot;Added disk </span><span class="nv">$target</span><span class="s2"> to </span><span class="nv">$device</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">else</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">Failed to add disk</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>

<span class="w">        </span><span class="s2">&quot;remove&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$target</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Usage: manage_raid remove &lt;raid_device&gt; &lt;disk&gt;&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>

<span class="w">            </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">YELLOW</span><span class="si">}</span><span class="s2">Removing </span><span class="nv">$target</span><span class="s2"> from </span><span class="nv">$device</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span>mdadm<span class="w"> </span>--remove<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$target</span><span class="s2">&quot;</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">Disk removed successfully</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span>log_message<span class="w"> </span><span class="s2">&quot;Removed disk </span><span class="nv">$target</span><span class="s2"> from </span><span class="nv">$device</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">else</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">Failed to remove disk</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>

<span class="w">        </span><span class="s2">&quot;fail&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$target</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Usage: manage_raid fail &lt;raid_device&gt; &lt;disk&gt;&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>

<span class="w">            </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">YELLOW</span><span class="si">}</span><span class="s2">Marking </span><span class="nv">$target</span><span class="s2"> as failed in </span><span class="nv">$device</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span>mdadm<span class="w"> </span>--fail<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$target</span><span class="s2">&quot;</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">Disk marked as failed</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span>log_message<span class="w"> </span><span class="s2">&quot;Marked disk </span><span class="nv">$target</span><span class="s2"> as failed in </span><span class="nv">$device</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">else</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">Failed to mark disk as failed</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>

<span class="w">        </span><span class="s2">&quot;replace&quot;</span><span class="o">)</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$target</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Usage: manage_raid replace &lt;raid_device&gt; &lt;old_disk&gt; &lt;new_disk&gt;&quot;</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Note: old_disk should be failed first&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>

<span class="w">            </span><span class="nb">local</span><span class="w"> </span><span class="nv">new_disk</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$4</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$new_disk</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;New disk not specified&quot;</span>
<span class="w">                </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">            </span><span class="k">fi</span>

<span class="w">            </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">YELLOW</span><span class="si">}</span><span class="s2">Replacing </span><span class="nv">$target</span><span class="s2"> with </span><span class="nv">$new_disk</span><span class="s2"> in </span><span class="nv">$device</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">            </span><span class="c1"># Remove failed disk</span>
<span class="w">            </span>mdadm<span class="w"> </span>--remove<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$target</span><span class="s2">&quot;</span>

<span class="w">            </span><span class="c1"># Add new disk</span>
<span class="w">            </span><span class="k">if</span><span class="w"> </span>mdadm<span class="w"> </span>--add<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$new_disk</span><span class="s2">&quot;</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">Disk replacement initiated</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">                </span>log_message<span class="w"> </span><span class="s2">&quot;Replaced disk </span><span class="nv">$target</span><span class="s2"> with </span><span class="nv">$new_disk</span><span class="s2"> in </span><span class="nv">$device</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">else</span>
<span class="w">                </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">RED</span><span class="si">}</span><span class="s2">Failed to add replacement disk</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">            </span><span class="k">fi</span>
<span class="w">            </span><span class="p">;;</span>

<span class="w">        </span>*<span class="o">)</span>
<span class="w">            </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Available actions: add, remove, fail, replace&quot;</span>
<span class="w">            </span><span class="p">;;</span>
<span class="w">    </span><span class="k">esac</span>
<span class="o">}</span>

<span class="c1"># Send email alert</span>
send_alert<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">message</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="nb">command</span><span class="w"> </span>-v<span class="w"> </span>mail<span class="w"> </span><span class="p">&amp;</span>&gt;<span class="w"> </span>/dev/null<span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$message</span><span class="s2">&quot;</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>mail<span class="w"> </span>-s<span class="w"> </span><span class="s2">&quot;RAID Alert - </span><span class="k">$(</span>hostname<span class="k">)</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$ALERT_EMAIL</span><span class="s2">&quot;</span>
<span class="w">        </span>log_message<span class="w"> </span><span class="s2">&quot;Alert sent: </span><span class="nv">$message</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="k">else</span>
<span class="w">        </span>log_message<span class="w"> </span><span class="s2">&quot;Alert (mail not configured): </span><span class="nv">$message</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="k">fi</span>
<span class="o">}</span>

<span class="c1"># Performance test</span>
test_raid_performance<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">device</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$1</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">test_file</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$2</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="k">if</span><span class="w"> </span><span class="o">[[</span><span class="w"> </span>-z<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Usage: test_raid_performance &lt;device&gt; [test_file]&quot;</span>
<span class="w">        </span><span class="k">return</span><span class="w"> </span><span class="m">1</span>
<span class="w">    </span><span class="k">fi</span>

<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">mount_point</span><span class="o">=</span><span class="s2">&quot;/mnt/raid_test&quot;</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">test_path</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">test_file</span><span class="k">:-</span><span class="nv">$mount_point</span><span class="p">/test_file</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">BLUE</span><span class="si">}</span><span class="s2">=== RAID Performance Test ===</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="c1"># Mount if not already mounted</span>
<span class="w">    </span><span class="k">if</span><span class="w"> </span>!<span class="w"> </span>mountpoint<span class="w"> </span>-q<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$mount_point</span><span class="s2">&quot;</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">        </span>mkdir<span class="w"> </span>-p<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$mount_point</span><span class="s2">&quot;</span>
<span class="w">        </span>mount<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$mount_point</span><span class="s2">&quot;</span>
<span class="w">    </span><span class="k">fi</span>

<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Testing write performance...&quot;</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">write_speed</span><span class="o">=</span><span class="k">$(</span>dd<span class="w"> </span><span class="k">if</span><span class="o">=</span>/dev/zero<span class="w"> </span><span class="nv">of</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$test_path</span><span class="s2">&quot;</span><span class="w"> </span><span class="nv">bs</span><span class="o">=</span>1M<span class="w"> </span><span class="nv">count</span><span class="o">=</span><span class="m">1024</span><span class="w"> </span><span class="m">2</span>&gt;<span class="p">&amp;</span><span class="m">1</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span><span class="s2">&quot;MB/s&quot;</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>awk<span class="w"> </span><span class="s1">&#39;{print $(NF-1) &quot; &quot; $NF}&#39;</span><span class="k">)</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Write speed: </span><span class="nv">$write_speed</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Testing read performance...&quot;</span>
<span class="w">    </span><span class="nb">local</span><span class="w"> </span><span class="nv">read_speed</span><span class="o">=</span><span class="k">$(</span>dd<span class="w"> </span><span class="k">if</span><span class="o">=</span><span class="s2">&quot;</span><span class="nv">$test_path</span><span class="s2">&quot;</span><span class="w"> </span><span class="nv">of</span><span class="o">=</span>/dev/null<span class="w"> </span><span class="nv">bs</span><span class="o">=</span>1M<span class="w"> </span><span class="m">2</span>&gt;<span class="p">&amp;</span><span class="m">1</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span><span class="s2">&quot;MB/s&quot;</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>awk<span class="w"> </span><span class="s1">&#39;{print $(NF-1) &quot; &quot; $NF}&#39;</span><span class="k">)</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Read speed: </span><span class="nv">$read_speed</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="c1"># Cleanup</span>
<span class="w">    </span>rm<span class="w"> </span>-f<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$test_path</span><span class="s2">&quot;</span>

<span class="w">    </span>log_message<span class="w"> </span><span class="s2">&quot;Performance test for </span><span class="nv">$device</span><span class="s2"> - Write: </span><span class="nv">$write_speed</span><span class="s2">, Read: </span><span class="nv">$read_speed</span><span class="s2">&quot;</span>
<span class="o">}</span>

<span class="c1"># Main menu</span>
<span class="k">case</span><span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">1</span><span class="k">:-</span><span class="nv">help</span><span class="si">}</span><span class="s2">&quot;</span><span class="w"> </span><span class="k">in</span>
<span class="w">    </span><span class="s2">&quot;install&quot;</span><span class="o">)</span>
<span class="w">        </span>check_root
<span class="w">        </span>install_dependencies
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;discover&quot;</span><span class="o">)</span>
<span class="w">        </span>discover_raids
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;create&quot;</span><span class="o">)</span>
<span class="w">        </span>check_root
<span class="w">        </span>create_raid<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$2</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$3</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$4</span><span class="s2">&quot;</span>
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;monitor&quot;</span><span class="o">)</span>
<span class="w">        </span>monitor_raid_health
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;manage&quot;</span><span class="o">)</span>
<span class="w">        </span>check_root
<span class="w">        </span>manage_raid<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$2</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$3</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$4</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$5</span><span class="s2">&quot;</span>
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;performance&quot;</span><span class="o">)</span>
<span class="w">        </span>test_raid_performance<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$2</span><span class="s2">&quot;</span><span class="w"> </span><span class="s2">&quot;</span><span class="nv">$3</span><span class="s2">&quot;</span>
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;help&quot;</span><span class="p">|</span>*<span class="o">)</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;RAID Manager for Ubuntu 22.04&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Usage: </span><span class="nv">$0</span><span class="s2"> [command] [options]&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Commands:&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  install                           - Install RAID dependencies&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  discover                          - Discover existing RAID devices&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  create &lt;level&gt; &lt;devices&gt; [name]   - Create new RAID array&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  monitor                           - Check RAID health&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  manage &lt;action&gt; &lt;device&gt; &lt;disk&gt;   - Manage RAID devices&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  performance &lt;device&gt; [file]       - Test RAID performance&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;RAID Levels: 0, 1, 5, 6, 10&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Manage Actions: add, remove, fail, replace&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Examples:&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  </span><span class="nv">$0</span><span class="s2"> create 1 /dev/sdb,/dev/sdc mirror1&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  </span><span class="nv">$0</span><span class="s2"> create 5 /dev/sdb,/dev/sdc,/dev/sdd stripe1&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  </span><span class="nv">$0</span><span class="s2"> manage add /dev/md0 /dev/sde&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  </span><span class="nv">$0</span><span class="s2"> manage replace /dev/md0 /dev/sdb /dev/sdf&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  </span><span class="nv">$0</span><span class="s2"> performance /dev/md0&quot;</span>
<span class="w">        </span><span class="p">;;</span>
<span class="k">esac</span>
</pre></div>
</div>
</section>
</section>
<section id="best-practices-for-raid-implementation">
<h3>Best Practices for RAID Implementation</h3>
<section id="planning-and-design">
<h4>Planning and Design</h4>
<ol class="arabic simple">
<li><p><strong>Capacity Planning</strong>:</p>
<ul class="simple">
<li><p>Calculate usable capacity for each RAID level</p></li>
<li><p>Plan for future expansion</p></li>
<li><p>Consider spare drives for automatic rebuilds</p></li>
<li><p>Account for rebuild times</p></li>
</ul>
</li>
<li><p><strong>Performance Considerations</strong>:</p>
<ul class="simple">
<li><p>Match disk speeds and sizes</p></li>
<li><p>Use appropriate chunk sizes for workload</p></li>
<li><p>Consider I/O patterns</p></li>
<li><p>Plan for concurrent operations</p></li>
</ul>
</li>
</ol>
</section>
<section id="hardware-considerations">
<h4>Hardware Considerations</h4>
<ol class="arabic">
<li><p><strong>Disk Selection</strong>:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Check disk specifications</span>
sudo<span class="w"> </span>hdparm<span class="w"> </span>-I<span class="w"> </span>/dev/sdb<span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span>-E<span class="w"> </span><span class="s2">&quot;(Model|Serial|Capacity)&quot;</span>

<span class="c1"># Verify disks are identical</span>
<span class="k">for</span><span class="w"> </span>disk<span class="w"> </span><span class="k">in</span><span class="w"> </span>/dev/sd<span class="o">[</span>b-d<span class="o">]</span><span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;=== </span><span class="nv">$disk</span><span class="s2"> ===&quot;</span>
<span class="w">    </span>sudo<span class="w"> </span>smartctl<span class="w"> </span>-i<span class="w"> </span><span class="nv">$disk</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span>-E<span class="w"> </span><span class="s2">&quot;(Device Model|Serial Number|User Capacity)&quot;</span>
<span class="k">done</span>
</pre></div>
</div>
</li>
<li><p><strong>Controller Considerations</strong>:</p>
<ul class="simple">
<li><p>Hardware RAID vs Software RAID</p></li>
<li><p>Battery-backed write cache</p></li>
<li><p>Multiple controller support</p></li>
<li><p>Hot-swap capability</p></li>
</ul>
</li>
</ol>
</section>
<section id="monitoring-and-maintenance">
<h4>Monitoring and Maintenance</h4>
<ol class="arabic">
<li><p><strong>Automated Monitoring</strong>:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Set up email notifications</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;MAILADDR admin@example.com&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/mdadm/mdadm.conf

<span class="c1"># Configure monitoring daemon</span>
systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>mdmonitor

<span class="c1"># Test notifications</span>
mdadm<span class="w"> </span>--monitor<span class="w"> </span>--test<span class="w"> </span>/dev/md0
</pre></div>
</div>
</li>
<li><p><strong>Regular Maintenance</strong>:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Schedule regular RAID checks</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;0 1 1 * * root echo check &gt; /sys/block/md0/md/sync_action&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/crontab

<span class="c1"># Monitor rebuild progress</span>
watch<span class="w"> </span>cat<span class="w"> </span>/proc/mdstat

<span class="c1"># Check SMART status regularly</span>
<span class="k">for</span><span class="w"> </span>disk<span class="w"> </span><span class="k">in</span><span class="w"> </span>/dev/sd<span class="o">[</span>a-z<span class="o">]</span><span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">    </span>smartctl<span class="w"> </span>-a<span class="w"> </span><span class="nv">$disk</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span>-E<span class="w"> </span><span class="s2">&quot;(Health|Temperature|Error)&quot;</span>
<span class="k">done</span>
</pre></div>
</div>
</li>
</ol>
</section>
<section id="recovery-and-disaster-planning">
<h4>Recovery and Disaster Planning</h4>
<ol class="arabic">
<li><p><strong>Backup Strategy</strong>:</p>
<ul class="simple">
<li><p>RAID is not a backup solution</p></li>
<li><p>Implement 3-2-1 backup rule</p></li>
<li><p>Test restoration procedures</p></li>
<li><p>Document recovery processes</p></li>
</ul>
</li>
<li><p><strong>Disaster Recovery</strong>:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Save RAID configuration</span>
mdadm<span class="w"> </span>--detail<span class="w"> </span>--scan<span class="w"> </span>&gt;<span class="w"> </span>/etc/mdadm/mdadm.conf.backup

<span class="c1"># Create recovery documentation</span>
cat<span class="w"> </span>&gt;<span class="w"> </span>/root/raid_recovery.txt<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s">RAID Recovery Procedures:</span>

<span class="s">1. Boot from rescue media</span>
<span class="s">2. Install mdadm: apt install mdadm</span>
<span class="s">3. Scan for arrays: mdadm --assemble --scan</span>
<span class="s">4. Force assembly if needed: mdadm --assemble --force /dev/md0 /dev/sdb /dev/sdc</span>
<span class="s">5. Mount and check data</span>
<span class="s">EOF</span>
</pre></div>
</div>
</li>
</ol>
</section>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>
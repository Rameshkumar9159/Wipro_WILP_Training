<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Storage Overview</title>
    <link rel="stylesheet" type="text/css" href="_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="storage-overview">
<h1>Storage Overview</h1>
<section id="introduction-to-storage-systems">
<h2>Introduction to Storage Systems</h2>
<p>Storage systems are fundamental components of any computing environment. They provide persistent data storage, enabling programs and users to save, retrieve, and manage information efficiently.</p>
<section id="what-is-storage">
<h3>What is Storage?</h3>
<p>Storage refers to the various technologies and devices used to hold digital data persistently. Unlike volatile memory (RAM), storage retains data even when power is removed from the system.</p>
</section>
<section id="types-of-storage">
<h3>Types of Storage</h3>
<section id="primary-storage-categories">
<h4>Primary Storage Categories</h4>
<ol class="arabic simple">
<li><p><strong>Primary Storage</strong>: Direct access storage (RAM, Cache)</p></li>
<li><p><strong>Secondary Storage</strong>: Persistent storage (Hard drives, SSDs)</p></li>
<li><p><strong>Tertiary Storage</strong>: Archival storage (Tape drives, Optical storage)</p></li>
<li><p><strong>Network Storage</strong>: Remote storage accessed over networks</p></li>
</ol>
</section>
</section>
<section id="storage-hierarchy">
<h3>Storage Hierarchy</h3>
<div class="highlight-text notranslate"><div class="highlight"><pre><span></span>CPU Registers (fastest, smallest)
↓
Cache Memory (L1, L2, L3)
↓
Main Memory (RAM)
↓
Secondary Storage (SSD, HDD)
↓
Network Storage (NAS, SAN)
↓
Archival Storage (slowest, largest)
</pre></div>
</div>
</section>
<section id="ubuntu-22-04-storage-commands">
<h3>Ubuntu 22.04 Storage Commands</h3>
<section id="basic-storage-information-commands">
<h4>Basic Storage Information Commands</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Check disk usage</span>
df<span class="w"> </span>-h

<span class="c1"># Display detailed disk usage</span>
du<span class="w"> </span>-sh<span class="w"> </span>/home/*

<span class="c1"># List block devices</span>
lsblk

<span class="c1"># Show partition table</span>
sudo<span class="w"> </span>fdisk<span class="w"> </span>-l

<span class="c1"># Display mounted filesystems</span>
mount<span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span><span class="s2">&quot;^/dev&quot;</span>

<span class="c1"># Check filesystem usage</span>
sudo<span class="w"> </span>du<span class="w"> </span>-h<span class="w"> </span>--max-depth<span class="o">=</span><span class="m">1</span><span class="w"> </span>/
</pre></div>
</div>
</section>
<section id="storage-performance-monitoring">
<h4>Storage Performance Monitoring</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Monitor I/O statistics</span>
iostat<span class="w"> </span>-x<span class="w"> </span><span class="m">1</span>

<span class="c1"># Watch disk activity</span>
sudo<span class="w"> </span>iotop

<span class="c1"># Check disk performance</span>
sudo<span class="w"> </span>hdparm<span class="w"> </span>-Tt<span class="w"> </span>/dev/sda

<span class="c1"># Monitor filesystem usage in real-time</span>
watch<span class="w"> </span>df<span class="w"> </span>-h
</pre></div>
</div>
</section>
</section>
<section id="frequently-asked-questions">
<h3>Frequently Asked Questions</h3>
<section id="q-what-s-the-difference-between-storage-and-memory">
<h4>Q: What’s the difference between storage and memory?</h4>
<p><strong>A:</strong> Memory (RAM) is volatile and provides temporary storage for currently running programs. Storage is non-volatile and provides permanent data storage that persists when the system is powered off.</p>
</section>
<section id="q-how-do-i-check-available-storage-space-on-ubuntu-22-04">
<h4>Q: How do I check available storage space on Ubuntu 22.04?</h4>
<p><strong>A:</strong> Use the following commands:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Human-readable format</span>
df<span class="w"> </span>-h

<span class="c1"># Show inodes usage</span>
df<span class="w"> </span>-i

<span class="c1"># Specific filesystem</span>
df<span class="w"> </span>-h<span class="w"> </span>/home
</pre></div>
</div>
</section>
<section id="q-what-storage-types-are-best-for-different-use-cases">
<h4>Q: What storage types are best for different use cases?</h4>
<p><strong>A:</strong></p>
<ul class="simple">
<li><p><strong>SSDs</strong>: Best for operating systems, applications, and frequently accessed data</p></li>
<li><p><strong>HDDs</strong>: Ideal for bulk storage, backups, and archival data</p></li>
<li><p><strong>NVMe SSDs</strong>: Perfect for high-performance applications and databases</p></li>
<li><p><strong>Network Storage</strong>: Suitable for shared data and centralized management</p></li>
</ul>
</section>
<section id="q-how-can-i-optimize-storage-performance-on-ubuntu">
<h4>Q: How can I optimize storage performance on Ubuntu?</h4>
<p><strong>A:</strong> Several optimization techniques:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Enable TRIM for SSDs</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>fstrim.timer

<span class="c1"># Optimize filesystem for SSDs</span>
sudo<span class="w"> </span>tune2fs<span class="w"> </span>-o<span class="w"> </span>discard<span class="w"> </span>/dev/sda1

<span class="c1"># Mount with noatime option (in /etc/fstab)</span>
<span class="c1"># /dev/sda1 / ext4 defaults,noatime 0 1</span>

<span class="c1"># Use appropriate I/O scheduler</span>
<span class="nb">echo</span><span class="w"> </span>noop<span class="w"> </span><span class="p">|</span><span class="w"> </span>sudo<span class="w"> </span>tee<span class="w"> </span>/sys/block/sda/queue/scheduler
</pre></div>
</div>
</section>
</section>
<section id="coding-examples">
<h3>Coding Examples</h3>
<section id="python-storage-monitoring-script">
<h4>Python Storage Monitoring Script</h4>
<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="ch">#!/usr/bin/env python3</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">Storage monitoring script for Ubuntu 22.04</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">os</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">shutil</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">subprocess</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">json</span>

<span class="k">def</span><span class="w"> </span><span class="nf">get_disk_usage</span><span class="p">():</span>
<span class="w">    </span><span class="sd">&quot;&quot;&quot;Get disk usage information&quot;&quot;&quot;</span>
    <span class="n">usage</span> <span class="o">=</span> <span class="n">shutil</span><span class="o">.</span><span class="n">disk_usage</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>
    <span class="n">total</span> <span class="o">=</span> <span class="n">usage</span><span class="o">.</span><span class="n">total</span>
    <span class="n">used</span> <span class="o">=</span> <span class="n">usage</span><span class="o">.</span><span class="n">used</span>
    <span class="n">free</span> <span class="o">=</span> <span class="n">usage</span><span class="o">.</span><span class="n">free</span>

    <span class="k">return</span> <span class="p">{</span>
        <span class="s1">&#39;total_gb&#39;</span><span class="p">:</span> <span class="nb">round</span><span class="p">(</span><span class="n">total</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span><span class="o">**</span><span class="mi">3</span><span class="p">),</span> <span class="mi">2</span><span class="p">),</span>
        <span class="s1">&#39;used_gb&#39;</span><span class="p">:</span> <span class="nb">round</span><span class="p">(</span><span class="n">used</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span><span class="o">**</span><span class="mi">3</span><span class="p">),</span> <span class="mi">2</span><span class="p">),</span>
        <span class="s1">&#39;free_gb&#39;</span><span class="p">:</span> <span class="nb">round</span><span class="p">(</span><span class="n">free</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span><span class="o">**</span><span class="mi">3</span><span class="p">),</span> <span class="mi">2</span><span class="p">),</span>
        <span class="s1">&#39;usage_percent&#39;</span><span class="p">:</span> <span class="nb">round</span><span class="p">((</span><span class="n">used</span> <span class="o">/</span> <span class="n">total</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="p">}</span>

<span class="k">def</span><span class="w"> </span><span class="nf">get_mounted_filesystems</span><span class="p">():</span>
<span class="w">    </span><span class="sd">&quot;&quot;&quot;Get list of mounted filesystems&quot;&quot;&quot;</span>
    <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;mount&#39;</span><span class="p">],</span> <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">filesystems</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;/dev/&#39;</span><span class="p">):</span>
            <span class="n">parts</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">:</span>
                <span class="n">filesystems</span><span class="o">.</span><span class="n">append</span><span class="p">({</span>
                    <span class="s1">&#39;device&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
                    <span class="s1">&#39;mountpoint&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
                    <span class="s1">&#39;filesystem&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span> <span class="k">else</span> <span class="s1">&#39;unknown&#39;</span>
                <span class="p">})</span>

    <span class="k">return</span> <span class="n">filesystems</span>

<span class="k">def</span><span class="w"> </span><span class="nf">monitor_io</span><span class="p">():</span>
<span class="w">    </span><span class="sd">&quot;&quot;&quot;Monitor I/O statistics&quot;&quot;&quot;</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;iostat&#39;</span><span class="p">,</span> <span class="s1">&#39;-x&#39;</span><span class="p">,</span> <span class="s1">&#39;1&#39;</span><span class="p">,</span> <span class="s1">&#39;1&#39;</span><span class="p">],</span>
                              <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span>
    <span class="k">except</span> <span class="ne">FileNotFoundError</span><span class="p">:</span>
        <span class="k">return</span> <span class="s2">&quot;iostat not available. Install with: sudo apt install sysstat&quot;</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;=== Storage System Monitor ===&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Disk Usage: </span><span class="si">{</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">get_disk_usage</span><span class="p">(),</span><span class="w"> </span><span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Mounted Filesystems: </span><span class="si">{</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">get_mounted_filesystems</span><span class="p">(),</span><span class="w"> </span><span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;I/O Statistics:&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">monitor_io</span><span class="p">())</span>
</pre></div>
</div>
</section>
<section id="bash-storage-management-script">
<h4>Bash Storage Management Script</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="ch">#!/bin/bash</span>
<span class="c1"># storage_manager.sh - Storage management utility for Ubuntu 22.04</span>

<span class="c1"># Colors for output</span>
<span class="nv">RED</span><span class="o">=</span><span class="s1">&#39;\033[0;31m&#39;</span>
<span class="nv">GREEN</span><span class="o">=</span><span class="s1">&#39;\033[0;32m&#39;</span>
<span class="nv">YELLOW</span><span class="o">=</span><span class="s1">&#39;\033[1;33m&#39;</span>
<span class="nv">NC</span><span class="o">=</span><span class="s1">&#39;\033[0m&#39;</span><span class="w"> </span><span class="c1"># No Color</span>

<span class="c1"># Function to display disk usage</span>
show_disk_usage<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">=== Disk Usage Information ===</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">    </span>df<span class="w"> </span>-h<span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span>-E<span class="w"> </span><span class="s2">&quot;^/dev&quot;</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="o">}</span>

<span class="c1"># Function to show largest directories</span>
show_large_dirs<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">=== Largest Directories ===</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="w">    </span>sudo<span class="w"> </span>du<span class="w"> </span>-h<span class="w"> </span>/home<span class="w"> </span>/var<span class="w"> </span>/usr<span class="w"> </span><span class="m">2</span>&gt;/dev/null<span class="w"> </span><span class="p">|</span><span class="w"> </span>sort<span class="w"> </span>-hr<span class="w"> </span><span class="p">|</span><span class="w"> </span>head<span class="w"> </span>-10
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="o">}</span>

<span class="c1"># Function to check storage health</span>
check_storage_health<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">=== Storage Health Check ===</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="c1"># Check for devices</span>
<span class="w">    </span><span class="k">for</span><span class="w"> </span>device<span class="w"> </span><span class="k">in</span><span class="w"> </span>/dev/sd<span class="o">[</span>a-z<span class="o">]</span><span class="p">;</span><span class="w"> </span><span class="k">do</span>
<span class="w">        </span><span class="k">if</span><span class="w"> </span><span class="o">[</span><span class="w"> </span>-b<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="o">]</span><span class="p">;</span><span class="w"> </span><span class="k">then</span>
<span class="w">            </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Checking </span><span class="nv">$device</span><span class="s2">...&quot;</span>
<span class="w">            </span>sudo<span class="w"> </span>smartctl<span class="w"> </span>-H<span class="w"> </span><span class="s2">&quot;</span><span class="nv">$device</span><span class="s2">&quot;</span><span class="w"> </span><span class="m">2</span>&gt;/dev/null<span class="w"> </span><span class="o">||</span><span class="w"> </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;SMART not available for </span><span class="nv">$device</span><span class="s2">&quot;</span>
<span class="w">        </span><span class="k">fi</span>
<span class="w">    </span><span class="k">done</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="o">}</span>

<span class="c1"># Function to clean temporary files</span>
clean_temp_files<span class="o">()</span><span class="w"> </span><span class="o">{</span>
<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">YELLOW</span><span class="si">}</span><span class="s2">=== Cleaning Temporary Files ===</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>

<span class="w">    </span><span class="c1"># Clean apt cache</span>
<span class="w">    </span>sudo<span class="w"> </span>apt<span class="w"> </span>autoclean
<span class="w">    </span>sudo<span class="w"> </span>apt<span class="w"> </span>autoremove

<span class="w">    </span><span class="c1"># Clean user temp files</span>
<span class="w">    </span>rm<span class="w"> </span>-rf<span class="w"> </span>~/.cache/thumbnails/*
<span class="w">    </span>rm<span class="w"> </span>-rf<span class="w"> </span>/tmp/*

<span class="w">    </span><span class="c1"># Clean system logs (keep last 3 days)</span>
<span class="w">    </span>sudo<span class="w"> </span>journalctl<span class="w"> </span>--vacuum-time<span class="o">=</span>3d

<span class="w">    </span><span class="nb">echo</span><span class="w"> </span>-e<span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">GREEN</span><span class="si">}</span><span class="s2">Cleanup completed!</span><span class="si">${</span><span class="nv">NC</span><span class="si">}</span><span class="s2">&quot;</span>
<span class="o">}</span>

<span class="c1"># Main menu</span>
<span class="k">case</span><span class="w"> </span><span class="s2">&quot;</span><span class="si">${</span><span class="nv">1</span><span class="k">:-</span><span class="nv">menu</span><span class="si">}</span><span class="s2">&quot;</span><span class="w"> </span><span class="k">in</span>
<span class="w">    </span><span class="s2">&quot;usage&quot;</span><span class="o">)</span>
<span class="w">        </span>show_disk_usage
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;large&quot;</span><span class="o">)</span>
<span class="w">        </span>show_large_dirs
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;health&quot;</span><span class="o">)</span>
<span class="w">        </span>check_storage_health
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;clean&quot;</span><span class="o">)</span>
<span class="w">        </span>clean_temp_files
<span class="w">        </span><span class="p">;;</span>
<span class="w">    </span><span class="s2">&quot;menu&quot;</span><span class="p">|</span>*<span class="o">)</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Storage Manager for Ubuntu 22.04&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Usage: </span><span class="nv">$0</span><span class="s2"> [option]&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;Options:&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  usage  - Show disk usage&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  large  - Show largest directories&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  health - Check storage health&quot;</span>
<span class="w">        </span><span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;  clean  - Clean temporary files&quot;</span>
<span class="w">        </span><span class="p">;;</span>
<span class="k">esac</span>
</pre></div>
</div>
</section>
</section>
<section id="best-practices">
<h3>Best Practices</h3>
<section id="storage-planning">
<h4>Storage Planning</h4>
<ol class="arabic simple">
<li><p><strong>Capacity Planning</strong>: Always plan for 20-30% free space</p></li>
<li><p><strong>Performance Requirements</strong>: Choose storage type based on IOPS needs</p></li>
<li><p><strong>Redundancy</strong>: Implement appropriate backup and RAID strategies</p></li>
<li><p><strong>Monitoring</strong>: Set up alerts for storage usage thresholds</p></li>
</ol>
</section>
<section id="ubuntu-22-04-specific-recommendations">
<h4>Ubuntu 22.04 Specific Recommendations</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install useful storage tools</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>-y<span class="w"> </span>htop<span class="w"> </span>iotop<span class="w"> </span>smartmontools<span class="w"> </span>sysstat<span class="w"> </span>tree<span class="w"> </span>ncdu

<span class="c1"># Set up automatic TRIM for SSDs</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>fstrim.timer
sudo<span class="w"> </span>systemctl<span class="w"> </span>start<span class="w"> </span>fstrim.timer

<span class="c1"># Configure log rotation</span>
sudo<span class="w"> </span>vim<span class="w"> </span>/etc/logrotate.conf

<span class="c1"># Monitor storage usage with cron</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;0 */6 * * * /usr/bin/df -h | mail -s &#39;Storage Report&#39; admin@example.com&quot;</span><span class="w"> </span><span class="p">|</span><span class="w"> </span>crontab<span class="w"> </span>-
</pre></div>
</div>
</section>
<section id="security-considerations">
<h4>Security Considerations</h4>
<ol class="arabic simple">
<li><p><strong>Encryption</strong>: Use LUKS for full disk encryption</p></li>
<li><p><strong>Access Controls</strong>: Implement proper file permissions</p></li>
<li><p><strong>Backup Security</strong>: Encrypt backups and test restoration</p></li>
<li><p><strong>Network Storage</strong>: Use secure protocols (SSH, VPN)</p></li>
</ol>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Set up LUKS encryption</span>
sudo<span class="w"> </span>cryptsetup<span class="w"> </span>luksFormat<span class="w"> </span>/dev/sdb
sudo<span class="w"> </span>cryptsetup<span class="w"> </span>luksOpen<span class="w"> </span>/dev/sdb<span class="w"> </span>encrypted_drive

<span class="c1"># Create filesystem on encrypted device</span>
sudo<span class="w"> </span>mkfs.ext4<span class="w"> </span>/dev/mapper/encrypted_drive

<span class="c1"># Mount encrypted filesystem</span>
sudo<span class="w"> </span>mkdir<span class="w"> </span>/mnt/encrypted
sudo<span class="w"> </span>mount<span class="w"> </span>/dev/mapper/encrypted_drive<span class="w"> </span>/mnt/encrypted
</pre></div>
</div>
</section>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>
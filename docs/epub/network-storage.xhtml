<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Network Storage</title>
    <link rel="stylesheet" type="text/css" href="_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="_static/epub.css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <section id="network-storage">
<h1>Network Storage</h1>
<section id="understanding-network-storage">
<h2>Understanding Network Storage</h2>
<p>Network storage allows multiple systems to access shared storage resources over a network. This technology is essential for modern IT environments, enabling centralized data management, improved collaboration, and efficient resource utilization.</p>
<section id="types-of-network-storage">
<h3>Types of Network Storage</h3>
<section id="network-attached-storage-nas">
<h4>Network Attached Storage (NAS)</h4>
<p><strong>Characteristics:</strong>
* File-level storage access
* Uses standard network protocols (NFS, SMB/CIFS, FTP)
* Easy to deploy and manage
* Suitable for file sharing and collaboration</p>
<p><strong>Common Protocols:</strong>
* <strong>NFS (Network File System)</strong>: Unix/Linux native protocol
* <strong>SMB/CIFS</strong>: Windows native, also supported by Linux
* <strong>FTP/SFTP</strong>: File transfer protocols
* <strong>HTTP/WebDAV</strong>: Web-based file access</p>
</section>
<section id="storage-area-network-san">
<h4>Storage Area Network (SAN)</h4>
<p><strong>Characteristics:</strong>
* Block-level storage access
* High-performance dedicated network
* Uses specialized protocols (iSCSI, Fibre Channel)
* Enterprise-level performance and reliability</p>
<p><strong>Common Protocols:</strong>
* <strong>iSCSI</strong>: SCSI over IP networks
* <strong>Fibre Channel</strong>: High-speed dedicated network
* <strong>FCoE</strong>: Fibre Channel over Ethernet
* <strong>InfiniBand</strong>: High-performance computing networks</p>
</section>
<section id="cloud-storage">
<h4>Cloud Storage</h4>
<p><strong>Characteristics:</strong>
* Storage as a Service (STaaS)
* Scalable and elastic
* Geographic distribution
* Pay-per-use model</p>
<p><strong>Common Services:</strong>
* <strong>Object Storage</strong>: Amazon S3, Google Cloud Storage, Azure Blob
* <strong>File Storage</strong>: Amazon EFS, Google Filestore, Azure Files
* <strong>Block Storage</strong>: Amazon EBS, Google Persistent Disk, Azure Disk</p>
</section>
</section>
<section id="setting-up-nfs-on-ubuntu-22-04">
<h3>Setting Up NFS on Ubuntu 22.04</h3>
<section id="nfs-server-configuration">
<h4>NFS Server Configuration</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install NFS server</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>nfs-kernel-server

<span class="c1"># Create shared directories</span>
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/srv/nfs/shared
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/srv/nfs/public
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/srv/nfs/private

<span class="c1"># Set permissions</span>
sudo<span class="w"> </span>chown<span class="w"> </span>nobody:nogroup<span class="w"> </span>/srv/nfs/shared
sudo<span class="w"> </span>chown<span class="w"> </span>nobody:nogroup<span class="w"> </span>/srv/nfs/public
sudo<span class="w"> </span>chmod<span class="w"> </span><span class="m">755</span><span class="w"> </span>/srv/nfs/shared
sudo<span class="w"> </span>chmod<span class="w"> </span><span class="m">755</span><span class="w"> </span>/srv/nfs/public

<span class="c1"># Configure exports</span>
sudo<span class="w"> </span>nano<span class="w"> </span>/etc/exports

<span class="c1"># Add export configurations</span>
cat<span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/exports<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s"># NFS exports configuration</span>
<span class="s">/srv/nfs/shared    192.168.1.0/24(rw,sync,no_subtree_check)</span>
<span class="s">/srv/nfs/public    *(ro,sync,no_subtree_check)</span>
<span class="s">/srv/nfs/private   192.168.1.100(rw,sync,no_subtree_check,no_root_squash)</span>
<span class="s">EOF</span>

<span class="c1"># Export the shares</span>
sudo<span class="w"> </span>exportfs<span class="w"> </span>-a

<span class="c1"># Restart NFS service</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span>restart<span class="w"> </span>nfs-kernel-server
sudo<span class="w"> </span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>nfs-kernel-server

<span class="c1"># Check NFS status</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span>status<span class="w"> </span>nfs-kernel-server
sudo<span class="w"> </span>exportfs<span class="w"> </span>-v
</pre></div>
</div>
</section>
<section id="nfs-client-configuration">
<h4>NFS Client Configuration</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install NFS client</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>nfs-common

<span class="c1"># Create mount points</span>
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/mnt/nfs/shared
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/mnt/nfs/public

<span class="c1"># Test NFS connectivity</span>
showmount<span class="w"> </span>-e<span class="w"> </span><span class="m">192</span>.168.1.10

<span class="c1"># Mount NFS shares</span>
sudo<span class="w"> </span>mount<span class="w"> </span>-t<span class="w"> </span>nfs<span class="w"> </span><span class="m">192</span>.168.1.10:/srv/nfs/shared<span class="w"> </span>/mnt/nfs/shared
sudo<span class="w"> </span>mount<span class="w"> </span>-t<span class="w"> </span>nfs<span class="w"> </span><span class="m">192</span>.168.1.10:/srv/nfs/public<span class="w"> </span>/mnt/nfs/public

<span class="c1"># Verify mounts</span>
df<span class="w"> </span>-h<span class="w"> </span><span class="p">|</span><span class="w"> </span>grep<span class="w"> </span>nfs

<span class="c1"># Add to fstab for persistent mounting</span>
cat<span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/fstab<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s"># NFS mounts</span>
<span class="s">192.168.1.10:/srv/nfs/shared  /mnt/nfs/shared  nfs  defaults,_netdev  0  0</span>
<span class="s">192.168.1.10:/srv/nfs/public  /mnt/nfs/public  nfs  ro,defaults,_netdev  0  0</span>
<span class="s">EOF</span>

<span class="c1"># Test fstab entries</span>
sudo<span class="w"> </span>umount<span class="w"> </span>/mnt/nfs/shared
sudo<span class="w"> </span>mount<span class="w"> </span>-a
</pre></div>
</div>
</section>
</section>
<section id="setting-up-samba-smb-cifs-on-ubuntu-22-04">
<h3>Setting Up Samba (SMB/CIFS) on Ubuntu 22.04</h3>
<section id="samba-server-configuration">
<h4>Samba Server Configuration</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install Samba</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>samba<span class="w"> </span>samba-common-bin

<span class="c1"># Create shared directories</span>
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/srv/samba/shared
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/srv/samba/public
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/srv/samba/users

<span class="c1"># Set permissions</span>
sudo<span class="w"> </span>chown<span class="w"> </span>root:sambashare<span class="w"> </span>/srv/samba/shared
sudo<span class="w"> </span>chown<span class="w"> </span>root:sambashare<span class="w"> </span>/srv/samba/public
sudo<span class="w"> </span>chown<span class="w"> </span>root:sambashare<span class="w"> </span>/srv/samba/users
sudo<span class="w"> </span>chmod<span class="w"> </span><span class="m">2775</span><span class="w"> </span>/srv/samba/shared
sudo<span class="w"> </span>chmod<span class="w"> </span><span class="m">2775</span><span class="w"> </span>/srv/samba/public
sudo<span class="w"> </span>chmod<span class="w"> </span><span class="m">2775</span><span class="w"> </span>/srv/samba/users

<span class="c1"># Backup original configuration</span>
sudo<span class="w"> </span>cp<span class="w"> </span>/etc/samba/smb.conf<span class="w"> </span>/etc/samba/smb.conf.backup

<span class="c1"># Configure Samba</span>
cat<span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/samba/smb.conf<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>

<span class="s">[shared]</span>
<span class="s">    comment = Shared Files</span>
<span class="s">    path = /srv/samba/shared</span>
<span class="s">    browseable = yes</span>
<span class="s">    writable = yes</span>
<span class="s">    guest ok = no</span>
<span class="s">    valid users = @sambashare</span>
<span class="s">    create mask = 0664</span>
<span class="s">    directory mask = 2775</span>

<span class="s">[public]</span>
<span class="s">    comment = Public Files</span>
<span class="s">    path = /srv/samba/public</span>
<span class="s">    browseable = yes</span>
<span class="s">    writable = yes</span>
<span class="s">    guest ok = yes</span>
<span class="s">    read only = no</span>
<span class="s">    create mask = 0755</span>

<span class="s">[users]</span>
<span class="s">    comment = User Directories</span>
<span class="s">    path = /srv/samba/users/%S</span>
<span class="s">    browseable = no</span>
<span class="s">    writable = yes</span>
<span class="s">    valid users = %S</span>
<span class="s">    create mask = 0644</span>
<span class="s">    directory mask = 0755</span>
<span class="s">EOF</span>

<span class="c1"># Create Samba user</span>
sudo<span class="w"> </span>useradd<span class="w"> </span>-M<span class="w"> </span>-s<span class="w"> </span>/usr/sbin/nologin<span class="w"> </span>sambauser
sudo<span class="w"> </span>usermod<span class="w"> </span>-aG<span class="w"> </span>sambashare<span class="w"> </span>sambauser
sudo<span class="w"> </span>smbpasswd<span class="w"> </span>-a<span class="w"> </span>sambauser

<span class="c1"># Restart Samba services</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span>restart<span class="w"> </span>smbd<span class="w"> </span>nmbd
sudo<span class="w"> </span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>smbd<span class="w"> </span>nmbd

<span class="c1"># Check Samba status</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span>status<span class="w"> </span>smbd
testparm
</pre></div>
</div>
</section>
<section id="samba-client-configuration">
<h4>Samba Client Configuration</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install CIFS utilities</span>
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>cifs-utils

<span class="c1"># Create mount points</span>
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/mnt/samba/shared
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/mnt/samba/public

<span class="c1"># Mount Samba shares</span>
sudo<span class="w"> </span>mount<span class="w"> </span>-t<span class="w"> </span>cifs<span class="w"> </span>//192.168.1.10/shared<span class="w"> </span>/mnt/samba/shared<span class="w"> </span>-o<span class="w"> </span><span class="nv">username</span><span class="o">=</span>sambauser

<span class="c1"># Create credentials file for automatic mounting</span>
cat<span class="w"> </span>&gt;<span class="w"> </span>~/.smbcredentials<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s">username=sambauser</span>
<span class="s">password=your_password</span>
<span class="s">domain=workgroup</span>
<span class="s">EOF</span>

chmod<span class="w"> </span><span class="m">600</span><span class="w"> </span>~/.smbcredentials

<span class="c1"># Add to fstab</span>
cat<span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/fstab<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s"># Samba mounts</span>
<span class="s">//192.168.1.10/shared  /mnt/samba/shared  cifs  credentials=/home/username/.smbcredentials,uid=1000,gid=1000,_netdev  0  0</span>
<span class="s">//192.168.1.10/public  /mnt/samba/public  cifs  guest,uid=1000,gid=1000,_netdev  0  0</span>
<span class="s">EOF</span>
</pre></div>
</div>
</section>
</section>
<section id="setting-up-iscsi-on-ubuntu-22-04">
<h3>Setting Up iSCSI on Ubuntu 22.04</h3>
<section id="iscsi-target-server-configuration">
<h4>iSCSI Target Server Configuration</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install iSCSI target</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>tgt

<span class="c1"># Create storage backing file</span>
sudo<span class="w"> </span>mkdir<span class="w"> </span>-p<span class="w"> </span>/srv/iscsi
sudo<span class="w"> </span>dd<span class="w"> </span><span class="k">if</span><span class="o">=</span>/dev/zero<span class="w"> </span><span class="nv">of</span><span class="o">=</span>/srv/iscsi/disk1.img<span class="w"> </span><span class="nv">bs</span><span class="o">=</span>1M<span class="w"> </span><span class="nv">count</span><span class="o">=</span><span class="m">10240</span>

<span class="c1"># Configure iSCSI target</span>
cat<span class="w"> </span>&gt;<span class="w"> </span>/etc/tgt/conf.d/iscsi-target.conf<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s"># iSCSI Target Configuration</span>
<span class="s">&lt;target iqn.2024-01.com.example:storage.disk1&gt;</span>
<span class="s">    backing-store /srv/iscsi/disk1.img</span>
<span class="s">    # Allow access from specific initiators</span>
<span class="s">    initiator-address 192.168.1.0/24</span>
<span class="s">    # Authentication (optional)</span>
<span class="s">    incominguser username password</span>
<span class="s">&lt;/target&gt;</span>
<span class="s">EOF</span>

<span class="c1"># Restart target service</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span>restart<span class="w"> </span>tgt
sudo<span class="w"> </span>systemctl<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>tgt

<span class="c1"># Check target status</span>
sudo<span class="w"> </span>tgtadm<span class="w"> </span>--mode<span class="w"> </span>target<span class="w"> </span>--op<span class="w"> </span>show
</pre></div>
</div>
</section>
<section id="iscsi-initiator-configuration">
<h4>iSCSI Initiator Configuration</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install iSCSI initiator</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>open-iscsi

<span class="c1"># Configure initiator name</span>
sudo<span class="w"> </span>nano<span class="w"> </span>/etc/iscsi/initiatorname.iscsi
<span class="c1"># Set: InitiatorName=iqn.2024-01.com.example:client1</span>

<span class="c1"># Configure CHAP authentication (if required)</span>
sudo<span class="w"> </span>nano<span class="w"> </span>/etc/iscsi/iscsid.conf
<span class="c1"># Uncomment and set:</span>
<span class="c1"># node.session.auth.authmethod = CHAP</span>
<span class="c1"># node.session.auth.username = username</span>
<span class="c1"># node.session.auth.password = password</span>

<span class="c1"># Discover targets</span>
sudo<span class="w"> </span>iscsiadm<span class="w"> </span>-m<span class="w"> </span>discovery<span class="w"> </span>-t<span class="w"> </span>sendtargets<span class="w"> </span>-p<span class="w"> </span><span class="m">192</span>.168.1.10

<span class="c1"># Login to target</span>
sudo<span class="w"> </span>iscsiadm<span class="w"> </span>-m<span class="w"> </span>node<span class="w"> </span>--login

<span class="c1"># Check connected sessions</span>
sudo<span class="w"> </span>iscsiadm<span class="w"> </span>-m<span class="w"> </span>session

<span class="c1"># Format and mount iSCSI disk</span>
sudo<span class="w"> </span>fdisk<span class="w"> </span>/dev/sdb<span class="w">  </span><span class="c1"># Create partition</span>
sudo<span class="w"> </span>mkfs.ext4<span class="w"> </span>/dev/sdb1
sudo<span class="w"> </span>mkdir<span class="w"> </span>/mnt/iscsi
sudo<span class="w"> </span>mount<span class="w"> </span>/dev/sdb1<span class="w"> </span>/mnt/iscsi
</pre></div>
</div>
</section>
</section>
<section id="cloud-storage-integration">
<h3>Cloud Storage Integration</h3>
<section id="rclone-configuration">
<h4>Rclone Configuration</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install rclone</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>rclone

<span class="c1"># Configure cloud storage</span>
rclone<span class="w"> </span>config

<span class="c1"># Example: Mount Google Drive</span>
mkdir<span class="w"> </span>~/GoogleDrive
rclone<span class="w"> </span>mount<span class="w"> </span>gdrive:<span class="w"> </span>~/GoogleDrive<span class="w"> </span>--daemon

<span class="c1"># Example: Sync to cloud storage</span>
rclone<span class="w"> </span>sync<span class="w"> </span>/home/user/Documents<span class="w"> </span>gdrive:Documents

<span class="c1"># Create systemd service for persistent mounting</span>
cat<span class="w"> </span>&gt;<span class="w"> </span>~/.config/systemd/user/rclone-gdrive.service<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s">[Unit]</span>
<span class="s">Description=Google Drive mount</span>
<span class="s">After=network.target</span>

<span class="s">[Service]</span>
<span class="s">Type=notify</span>
<span class="s">ExecStart=/usr/bin/rclone mount gdrive: %h/GoogleDrive --vfs-cache-mode writes</span>
<span class="s">ExecStop=/bin/fusermount -u %h/GoogleDrive</span>
<span class="s">Restart=always</span>
<span class="s">RestartSec=10</span>

<span class="s">[Install]</span>
<span class="s">WantedBy=default.target</span>
<span class="s">EOF</span>

systemctl<span class="w"> </span>--user<span class="w"> </span><span class="nb">enable</span><span class="w"> </span>rclone-gdrive.service
systemctl<span class="w"> </span>--user<span class="w"> </span>start<span class="w"> </span>rclone-gdrive.service
</pre></div>
</div>
</section>
<section id="s3-compatible-storage">
<h4>S3-Compatible Storage</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Install s3fs</span>
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>s3fs

<span class="c1"># Create credentials file</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;access_key:secret_key&quot;</span><span class="w"> </span>&gt;<span class="w"> </span>~/.passwd-s3fs
chmod<span class="w"> </span><span class="m">600</span><span class="w"> </span>~/.passwd-s3fs

<span class="c1"># Mount S3 bucket</span>
mkdir<span class="w"> </span>~/s3bucket
s3fs<span class="w"> </span>mybucket<span class="w"> </span>~/s3bucket<span class="w"> </span>-o<span class="w"> </span><span class="nv">passwd_file</span><span class="o">=</span>~/.passwd-s3fs<span class="w"> </span>-o<span class="w"> </span><span class="nv">url</span><span class="o">=</span>https://s3.amazonaws.com

<span class="c1"># Add to fstab for persistent mounting</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;s3fs#mybucket /home/user/s3bucket fuse _netdev,passwd_file=/home/user/.passwd-s3fs,url=https://s3.amazonaws.com 0 0&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/fstab
</pre></div>
</div>
</section>
</section>
<section id="network-storage-performance-optimization">
<h3>Network Storage Performance Optimization</h3>
<section id="nfs-performance-tuning">
<h4>NFS Performance Tuning</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Optimize NFS mount options</span>
sudo<span class="w"> </span>mount<span class="w"> </span>-t<span class="w"> </span>nfs<span class="w"> </span>-o<span class="w"> </span><span class="nv">rsize</span><span class="o">=</span><span class="m">32768</span>,wsize<span class="o">=</span><span class="m">32768</span>,hard,intr,tcp<span class="w"> </span><span class="m">192</span>.168.1.10:/srv/nfs/shared<span class="w"> </span>/mnt/nfs/shared

<span class="c1"># Configure NFS daemon threads</span>
sudo<span class="w"> </span>nano<span class="w"> </span>/etc/default/nfs-kernel-server
<span class="c1"># Set: RPCNFSDCOUNT=16</span>

<span class="c1"># Optimize network buffer sizes</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;net.core.rmem_max = 16777216&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/sysctl.conf
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;net.core.wmem_max = 16777216&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/sysctl.conf
sudo<span class="w"> </span>sysctl<span class="w"> </span>-p
</pre></div>
</div>
</section>
<section id="samba-performance-tuning">
<h4>Samba Performance Tuning</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Add performance options to smb.conf</span>
cat<span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/samba/smb.conf<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s">[global]</span>
<span class="s">    # Performance tuning</span>
<span class="s">    socket options = TCP_NODELAY IPTOS_LOWDELAY SO_RCVBUF=65536 SO_SNDBUF=65536</span>
<span class="s">    read raw = yes</span>
<span class="s">    write raw = yes</span>
<span class="s">    max xmit = 65535</span>
<span class="s">    dead time = 15</span>
<span class="s">    getwd cache = yes</span>
<span class="s">EOF</span>

sudo<span class="w"> </span>systemctl<span class="w"> </span>restart<span class="w"> </span>smbd
</pre></div>
</div>
</section>
<section id="iscsi-performance-tuning">
<h4>iSCSI Performance Tuning</h4>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Optimize iSCSI parameters</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;node.session.iscsi.InitialR2T = No&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/iscsi/iscsid.conf
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;node.session.iscsi.ImmediateData = Yes&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/iscsi/iscsid.conf
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;node.session.iscsi.FirstBurstLength = 262144&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/iscsi/iscsid.conf
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;node.session.iscsi.MaxBurstLength = 16776192&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/iscsi/iscsid.conf
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;node.conn[0].iscsi.MaxRecvDataSegmentLength = 262144&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/iscsi/iscsid.conf

sudo<span class="w"> </span>systemctl<span class="w"> </span>restart<span class="w"> </span>iscsid
</pre></div>
</div>
</section>
</section>
<section id="frequently-asked-questions">
<h3>Frequently Asked Questions</h3>
<section id="q-which-network-storage-protocol-should-i-choose">
<h4>Q: Which network storage protocol should I choose?</h4>
<p><strong>A:</strong> Choose based on your requirements:</p>
<div class="highlight-text notranslate"><div class="highlight"><pre><span></span>Use Case                    | Recommended Protocol | Reason
----------------------------|---------------------|------------------
Linux-only environment     | NFS                 | Native performance
Mixed OS environment       | SMB/CIFS            | Universal compatibility
High-performance storage    | iSCSI               | Block-level access
Simple file sharing         | FTP/SFTP            | Easy setup
Cloud storage              | Object storage APIs  | Scalability
Database storage           | iSCSI or FC         | Low latency
</pre></div>
</div>
</section>
<section id="q-how-do-i-troubleshoot-nfs-connection-issues">
<h4>Q: How do I troubleshoot NFS connection issues?</h4>
<p><strong>A:</strong> Follow these troubleshooting steps:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Check NFS service status</span>
sudo<span class="w"> </span>systemctl<span class="w"> </span>status<span class="w"> </span>nfs-kernel-server

<span class="c1"># Check exports</span>
sudo<span class="w"> </span>exportfs<span class="w"> </span>-v

<span class="c1"># Test connectivity</span>
telnet<span class="w"> </span>nfs-server-ip<span class="w"> </span><span class="m">2049</span>

<span class="c1"># Check firewall</span>
sudo<span class="w"> </span>ufw<span class="w"> </span>status
<span class="c1"># Open NFS ports if needed</span>
sudo<span class="w"> </span>ufw<span class="w"> </span>allow<span class="w"> </span>from<span class="w"> </span><span class="m">192</span>.168.1.0/24<span class="w"> </span>to<span class="w"> </span>any<span class="w"> </span>port<span class="w"> </span><span class="m">2049</span>

<span class="c1"># Check mount on client</span>
showmount<span class="w"> </span>-e<span class="w"> </span>nfs-server-ip

<span class="c1"># Debug mount issues</span>
sudo<span class="w"> </span>mount<span class="w"> </span>-t<span class="w"> </span>nfs<span class="w"> </span>-v<span class="w"> </span>nfs-server-ip:/path<span class="w"> </span>/mnt/point
</pre></div>
</div>
</section>
<section id="q-how-can-i-secure-network-storage">
<h4>Q: How can I secure network storage?</h4>
<p><strong>A:</strong> Implement these security measures:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># 1. Use VPN for remote access</span>
sudo<span class="w"> </span>apt<span class="w"> </span>install<span class="w"> </span>openvpn

<span class="c1"># 2. Enable firewall</span>
sudo<span class="w"> </span>ufw<span class="w"> </span><span class="nb">enable</span>
sudo<span class="w"> </span>ufw<span class="w"> </span>allow<span class="w"> </span>from<span class="w"> </span><span class="m">192</span>.168.1.0/24<span class="w"> </span>to<span class="w"> </span>any<span class="w"> </span>port<span class="w"> </span><span class="m">2049</span><span class="w">  </span><span class="c1"># NFS</span>
sudo<span class="w"> </span>ufw<span class="w"> </span>allow<span class="w"> </span>from<span class="w"> </span><span class="m">192</span>.168.1.0/24<span class="w"> </span>to<span class="w"> </span>any<span class="w"> </span>port<span class="w"> </span><span class="m">445</span><span class="w">   </span><span class="c1"># SMB</span>

<span class="c1"># 3. Use authentication</span>
<span class="c1"># For NFS: Configure Kerberos</span>
<span class="c1"># For SMB: Use strong passwords and encryption</span>

<span class="c1"># 4. Enable encryption</span>
<span class="c1"># For SMB, add to smb.conf:</span>
<span class="nb">echo</span><span class="w"> </span><span class="s2">&quot;smb encrypt = required&quot;</span><span class="w"> </span>&gt;&gt;<span class="w"> </span>/etc/samba/smb.conf

<span class="c1"># 5. Regular security updates</span>
sudo<span class="w"> </span>apt<span class="w"> </span>update<span class="w"> </span><span class="o">&amp;&amp;</span><span class="w"> </span>sudo<span class="w"> </span>apt<span class="w"> </span>upgrade
</pre></div>
</div>
</section>
<section id="q-how-do-i-monitor-network-storage-performance">
<h4>Q: How do I monitor network storage performance?</h4>
<p><strong>A:</strong> Use these monitoring tools:</p>
<div class="highlight-bash notranslate"><div class="highlight"><pre><span></span><span class="c1"># Monitor network I/O</span>
iftop<span class="w"> </span>-i<span class="w"> </span>eth0

<span class="c1"># Monitor NFS statistics</span>
nfsstat<span class="w"> </span>-c<span class="w">  </span><span class="c1"># Client stats</span>
nfsstat<span class="w"> </span>-s<span class="w">  </span><span class="c1"># Server stats</span>

<span class="c1"># Monitor iSCSI performance</span>
iostat<span class="w"> </span>-x<span class="w"> </span><span class="m">1</span>

<span class="c1"># Monitor Samba connections</span>
sudo<span class="w"> </span>smbstatus

<span class="c1"># Create monitoring script</span>
cat<span class="w"> </span>&gt;<span class="w"> </span>monitor_network_storage.sh<span class="w"> </span><span class="s">&lt;&lt; &#39;EOF&#39;</span>
<span class="s">#!/bin/bash</span>

<span class="s">echo &quot;=== Network Storage Performance Monitor ===&quot;</span>
<span class="s">echo &quot;Date: $(date)&quot;</span>
<span class="s">echo &quot;&quot;</span>

<span class="s">echo &quot;NFS Statistics:&quot;</span>
<span class="s">nfsstat -c 2&gt;/dev/null || echo &quot;NFS client not active&quot;</span>
<span class="s">echo &quot;&quot;</span>

<span class="s">echo &quot;Network Interface Statistics:&quot;</span>
<span class="s">cat /proc/net/dev | grep -E &quot;(eth0|ens|enp)&quot;</span>
<span class="s">echo &quot;&quot;</span>

<span class="s">echo &quot;Active Network Connections:&quot;</span>
<span class="s">ss -tuln | grep -E &quot;(2049|445|3260)&quot;  # NFS, SMB, iSCSI</span>
<span class="s">EOF</span>

chmod<span class="w"> </span>+x<span class="w"> </span>monitor_network_storage.sh
</pre></div>
</div>
</section>
</section>
<section id="coding-examples">
<h3>Coding Examples</h3>
<section id="python-network-storage-monitor">
<h4>Python Network Storage Monitor</h4>
<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="ch">#!/usr/bin/env python3</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="sd">Network storage monitoring script for Ubuntu 22.04</span>
<span class="sd">&quot;&quot;&quot;</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">subprocess</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">psutil</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">time</span>
<span class="kn">import</span><span class="w"> </span><span class="nn">json</span>
<span class="kn">from</span><span class="w"> </span><span class="nn">datetime</span><span class="w"> </span><span class="kn">import</span> <span class="n">datetime</span>

<span class="k">class</span><span class="w"> </span><span class="nc">NetworkStorageMonitor</span><span class="p">:</span>
    <span class="k">def</span><span class="w"> </span><span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">start_time</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">interfaces</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_network_interfaces</span><span class="p">()</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">get_network_interfaces</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Get list of network interfaces&quot;&quot;&quot;</span>
        <span class="k">return</span> <span class="nb">list</span><span class="p">(</span><span class="n">psutil</span><span class="o">.</span><span class="n">net_if_addrs</span><span class="p">()</span><span class="o">.</span><span class="n">keys</span><span class="p">())</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">check_nfs_mounts</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Check NFS mount status&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;mount&#39;</span><span class="p">,</span> <span class="s1">&#39;-t&#39;</span><span class="p">,</span> <span class="s1">&#39;nfs&#39;</span><span class="p">],</span>
                                  <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

            <span class="n">mounts</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">n&#39;</span><span class="p">):</span>
                <span class="k">if</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">parts</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
                    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">6</span><span class="p">:</span>
                        <span class="n">mounts</span><span class="o">.</span><span class="n">append</span><span class="p">({</span>
                            <span class="s1">&#39;server&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
                            <span class="s1">&#39;mountpoint&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
                            <span class="s1">&#39;options&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span>
                        <span class="p">})</span>

            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="s1">&#39;success&#39;</span><span class="p">,</span> <span class="s1">&#39;mounts&#39;</span><span class="p">:</span> <span class="n">mounts</span><span class="p">}</span>
        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="s1">&#39;message&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)}</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">check_smb_mounts</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Check SMB/CIFS mount status&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;mount&#39;</span><span class="p">,</span> <span class="s1">&#39;-t&#39;</span><span class="p">,</span> <span class="s1">&#39;cifs&#39;</span><span class="p">],</span>
                                  <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

            <span class="n">mounts</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">n&#39;</span><span class="p">):</span>
                <span class="k">if</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">parts</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">()</span>
                    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">6</span><span class="p">:</span>
                        <span class="n">mounts</span><span class="o">.</span><span class="n">append</span><span class="p">({</span>
                            <span class="s1">&#39;server&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
                            <span class="s1">&#39;mountpoint&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span>
                            <span class="s1">&#39;options&#39;</span><span class="p">:</span> <span class="n">parts</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span>
                        <span class="p">})</span>

            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="s1">&#39;success&#39;</span><span class="p">,</span> <span class="s1">&#39;mounts&#39;</span><span class="p">:</span> <span class="n">mounts</span><span class="p">}</span>
        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="s1">&#39;message&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)}</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">check_iscsi_sessions</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Check iSCSI session status&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;iscsiadm&#39;</span><span class="p">,</span> <span class="s1">&#39;-m&#39;</span><span class="p">,</span> <span class="s1">&#39;session&#39;</span><span class="p">],</span>
                                  <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

            <span class="n">sessions</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">n&#39;</span><span class="p">):</span>
                <span class="k">if</span> <span class="n">line</span> <span class="ow">and</span> <span class="s1">&#39;tcp:&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
                    <span class="n">sessions</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">())</span>

            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="s1">&#39;success&#39;</span><span class="p">,</span> <span class="s1">&#39;sessions&#39;</span><span class="p">:</span> <span class="n">sessions</span><span class="p">}</span>
        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="s1">&#39;message&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)}</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">get_network_stats</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Get network interface statistics&quot;&quot;&quot;</span>
        <span class="n">stats</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">net_io</span> <span class="o">=</span> <span class="n">psutil</span><span class="o">.</span><span class="n">net_io_counters</span><span class="p">(</span><span class="n">pernic</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

        <span class="k">for</span> <span class="n">interface</span><span class="p">,</span> <span class="n">counters</span> <span class="ow">in</span> <span class="n">net_io</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
            <span class="n">stats</span><span class="p">[</span><span class="n">interface</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
                <span class="s1">&#39;bytes_sent&#39;</span><span class="p">:</span> <span class="n">counters</span><span class="o">.</span><span class="n">bytes_sent</span><span class="p">,</span>
                <span class="s1">&#39;bytes_recv&#39;</span><span class="p">:</span> <span class="n">counters</span><span class="o">.</span><span class="n">bytes_recv</span><span class="p">,</span>
                <span class="s1">&#39;packets_sent&#39;</span><span class="p">:</span> <span class="n">counters</span><span class="o">.</span><span class="n">packets_sent</span><span class="p">,</span>
                <span class="s1">&#39;packets_recv&#39;</span><span class="p">:</span> <span class="n">counters</span><span class="o">.</span><span class="n">packets_recv</span><span class="p">,</span>
                <span class="s1">&#39;errors_in&#39;</span><span class="p">:</span> <span class="n">counters</span><span class="o">.</span><span class="n">errin</span><span class="p">,</span>
                <span class="s1">&#39;errors_out&#39;</span><span class="p">:</span> <span class="n">counters</span><span class="o">.</span><span class="n">errout</span><span class="p">,</span>
                <span class="s1">&#39;drops_in&#39;</span><span class="p">:</span> <span class="n">counters</span><span class="o">.</span><span class="n">dropin</span><span class="p">,</span>
                <span class="s1">&#39;drops_out&#39;</span><span class="p">:</span> <span class="n">counters</span><span class="o">.</span><span class="n">dropout</span>
            <span class="p">}</span>

        <span class="k">return</span> <span class="n">stats</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">check_service_status</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">service_name</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Check systemd service status&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">subprocess</span><span class="o">.</span><span class="n">run</span><span class="p">([</span><span class="s1">&#39;systemctl&#39;</span><span class="p">,</span> <span class="s1">&#39;is-active&#39;</span><span class="p">,</span> <span class="n">service_name</span><span class="p">],</span>
                                  <span class="n">capture_output</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span> <span class="n">text</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
            <span class="k">return</span> <span class="n">result</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
            <span class="k">return</span> <span class="s1">&#39;unknown&#39;</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">test_connectivity</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Test network connectivity to host:port&quot;&quot;&quot;</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="kn">import</span><span class="w"> </span><span class="nn">socket</span>
            <span class="n">sock</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
            <span class="n">sock</span><span class="o">.</span><span class="n">settimeout</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
            <span class="n">result</span> <span class="o">=</span> <span class="n">sock</span><span class="o">.</span><span class="n">connect_ex</span><span class="p">((</span><span class="n">host</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
            <span class="n">sock</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
            <span class="k">return</span> <span class="n">result</span> <span class="o">==</span> <span class="mi">0</span>
        <span class="k">except</span> <span class="ne">Exception</span><span class="p">:</span>
            <span class="k">return</span> <span class="kc">False</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">generate_report</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Generate comprehensive network storage report&quot;&quot;&quot;</span>
        <span class="n">report</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s1">&#39;timestamp&#39;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">isoformat</span><span class="p">(),</span>
            <span class="s1">&#39;uptime&#39;</span><span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">start_time</span><span class="p">,</span>
            <span class="s1">&#39;services&#39;</span><span class="p">:</span> <span class="p">{</span>
                <span class="s1">&#39;nfs-server&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_service_status</span><span class="p">(</span><span class="s1">&#39;nfs-kernel-server&#39;</span><span class="p">),</span>
                <span class="s1">&#39;smbd&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_service_status</span><span class="p">(</span><span class="s1">&#39;smbd&#39;</span><span class="p">),</span>
                <span class="s1">&#39;nmbd&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_service_status</span><span class="p">(</span><span class="s1">&#39;nmbd&#39;</span><span class="p">),</span>
                <span class="s1">&#39;iscsid&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_service_status</span><span class="p">(</span><span class="s1">&#39;iscsid&#39;</span><span class="p">),</span>
                <span class="s1">&#39;tgt&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_service_status</span><span class="p">(</span><span class="s1">&#39;tgt&#39;</span><span class="p">)</span>
            <span class="p">},</span>
            <span class="s1">&#39;mounts&#39;</span><span class="p">:</span> <span class="p">{</span>
                <span class="s1">&#39;nfs&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_nfs_mounts</span><span class="p">(),</span>
                <span class="s1">&#39;smb&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_smb_mounts</span><span class="p">()</span>
            <span class="p">},</span>
            <span class="s1">&#39;iscsi&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">check_iscsi_sessions</span><span class="p">(),</span>
            <span class="s1">&#39;network&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_network_stats</span><span class="p">()</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="n">report</span>

    <span class="k">def</span><span class="w"> </span><span class="nf">monitor_performance</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">duration</span><span class="o">=</span><span class="mi">60</span><span class="p">,</span> <span class="n">interval</span><span class="o">=</span><span class="mi">5</span><span class="p">):</span>
<span class="w">        </span><span class="sd">&quot;&quot;&quot;Monitor network storage performance over time&quot;&quot;&quot;</span>
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Monitoring network storage for </span><span class="si">{</span><span class="n">duration</span><span class="si">}</span><span class="s2"> seconds...&quot;</span><span class="p">)</span>

        <span class="n">start_stats</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_network_stats</span><span class="p">()</span>
        <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">duration</span><span class="p">)</span>
        <span class="n">end_stats</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_network_stats</span><span class="p">()</span>

        <span class="n">performance</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">for</span> <span class="n">interface</span> <span class="ow">in</span> <span class="n">start_stats</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">interface</span> <span class="ow">in</span> <span class="n">end_stats</span><span class="p">:</span>
                <span class="n">sent_diff</span> <span class="o">=</span> <span class="n">end_stats</span><span class="p">[</span><span class="n">interface</span><span class="p">][</span><span class="s1">&#39;bytes_sent&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">start_stats</span><span class="p">[</span><span class="n">interface</span><span class="p">][</span><span class="s1">&#39;bytes_sent&#39;</span><span class="p">]</span>
                <span class="n">recv_diff</span> <span class="o">=</span> <span class="n">end_stats</span><span class="p">[</span><span class="n">interface</span><span class="p">][</span><span class="s1">&#39;bytes_recv&#39;</span><span class="p">]</span> <span class="o">-</span> <span class="n">start_stats</span><span class="p">[</span><span class="n">interface</span><span class="p">][</span><span class="s1">&#39;bytes_recv&#39;</span><span class="p">]</span>

                <span class="n">performance</span><span class="p">[</span><span class="n">interface</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
                    <span class="s1">&#39;avg_send_rate_mbps&#39;</span><span class="p">:</span> <span class="p">(</span><span class="n">sent_diff</span> <span class="o">*</span> <span class="mi">8</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">duration</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">),</span>
                    <span class="s1">&#39;avg_recv_rate_mbps&#39;</span><span class="p">:</span> <span class="p">(</span><span class="n">recv_diff</span> <span class="o">*</span> <span class="mi">8</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">duration</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">),</span>
                    <span class="s1">&#39;total_sent_mb&#39;</span><span class="p">:</span> <span class="n">sent_diff</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">),</span>
                    <span class="s1">&#39;total_recv_mb&#39;</span><span class="p">:</span> <span class="n">recv_diff</span> <span class="o">/</span> <span class="p">(</span><span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">)</span>
                <span class="p">}</span>

        <span class="k">return</span> <span class="n">performance</span>

<span class="c1"># Example usage</span>
<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&quot;__main__&quot;</span><span class="p">:</span>
    <span class="kn">import</span><span class="w"> </span><span class="nn">argparse</span>

    <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s1">&#39;Network Storage Monitor&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--report&#39;</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">&#39;store_true&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Generate status report&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--monitor&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Monitor performance for N seconds&#39;</span><span class="p">)</span>
    <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s1">&#39;--json&#39;</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s1">&#39;store_true&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s1">&#39;Output in JSON format&#39;</span><span class="p">)</span>

    <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>

    <span class="n">monitor</span> <span class="o">=</span> <span class="n">NetworkStorageMonitor</span><span class="p">()</span>

    <span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">report</span><span class="p">:</span>
        <span class="n">report</span> <span class="o">=</span> <span class="n">monitor</span><span class="o">.</span><span class="n">generate_report</span><span class="p">()</span>
        <span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">json</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">report</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Network Storage Status Report&quot;</span><span class="p">)</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;=&quot;</span> <span class="o">*</span> <span class="mi">40</span><span class="p">)</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;Timestamp: </span><span class="si">{</span><span class="n">report</span><span class="p">[</span><span class="s1">&#39;timestamp&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;</span><span class="se">\\</span><span class="s2">nServices:&quot;</span><span class="p">)</span>
            <span class="k">for</span> <span class="n">service</span><span class="p">,</span> <span class="n">status</span> <span class="ow">in</span> <span class="n">report</span><span class="p">[</span><span class="s1">&#39;services&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
                <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;  </span><span class="si">{</span><span class="n">service</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">status</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>

            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;</span><span class="se">\\</span><span class="s2">nNFS Mounts: </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">report</span><span class="p">[</span><span class="s1">&#39;mounts&#39;</span><span class="p">][</span><span class="s1">&#39;nfs&#39;</span><span class="p">][</span><span class="s1">&#39;mounts&#39;</span><span class="p">])</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;SMB Mounts: </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">report</span><span class="p">[</span><span class="s1">&#39;mounts&#39;</span><span class="p">][</span><span class="s1">&#39;smb&#39;</span><span class="p">][</span><span class="s1">&#39;mounts&#39;</span><span class="p">])</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;iSCSI Sessions: </span><span class="si">{</span><span class="nb">len</span><span class="p">(</span><span class="n">report</span><span class="p">[</span><span class="s1">&#39;iscsi&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;sessions&#39;</span><span class="p">,</span><span class="w"> </span><span class="p">[]))</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>

    <span class="k">elif</span> <span class="n">args</span><span class="o">.</span><span class="n">monitor</span><span class="p">:</span>
        <span class="n">performance</span> <span class="o">=</span> <span class="n">monitor</span><span class="o">.</span><span class="n">monitor_performance</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">monitor</span><span class="p">)</span>
        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;</span><span class="se">\\</span><span class="s2">nNetwork Performance Summary (</span><span class="si">{</span><span class="n">args</span><span class="o">.</span><span class="n">monitor</span><span class="si">}</span><span class="s2">s):&quot;</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">interface</span><span class="p">,</span> <span class="n">stats</span> <span class="ow">in</span> <span class="n">performance</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;  </span><span class="si">{</span><span class="n">interface</span><span class="si">}</span><span class="s2">:&quot;</span><span class="p">)</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;    Average Send Rate: </span><span class="si">{</span><span class="n">stats</span><span class="p">[</span><span class="s1">&#39;avg_send_rate_mbps&#39;</span><span class="p">]</span><span class="si">:</span><span class="s2">.2f</span><span class="si">}</span><span class="s2"> Mbps&quot;</span><span class="p">)</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&quot;    Average Recv Rate: </span><span class="si">{</span><span class="n">stats</span><span class="p">[</span><span class="s1">&#39;avg_recv_rate_mbps&#39;</span><span class="p">]</span><span class="si">:</span><span class="s2">.2f</span><span class="si">}</span><span class="s2"> Mbps&quot;</span><span class="p">)</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="n">parser</span><span class="o">.</span><span class="n">print_help</span><span class="p">()</span>
</pre></div>
</div>
</section>
</section>
<section id="best-practices-for-network-storage">
<h3>Best Practices for Network Storage</h3>
<section id="security-best-practices">
<h4>Security Best Practices</h4>
<ol class="arabic simple">
<li><p><strong>Network Segmentation</strong>:</p>
<ul class="simple">
<li><p>Use dedicated VLANs for storage traffic</p></li>
<li><p>Implement firewall rules</p></li>
<li><p>Regular security audits</p></li>
</ul>
</li>
<li><p><strong>Authentication and Authorization</strong>:</p>
<ul class="simple">
<li><p>Strong passwords and multi-factor authentication</p></li>
<li><p>Regular credential rotation</p></li>
<li><p>Principle of least privilege</p></li>
</ul>
</li>
<li><p><strong>Encryption</strong>:</p>
<ul class="simple">
<li><p>Encrypt data in transit</p></li>
<li><p>Encrypt data at rest</p></li>
<li><p>Use VPN for remote access</p></li>
</ul>
</li>
</ol>
</section>
<section id="performance-best-practices">
<h4>Performance Best Practices</h4>
<ol class="arabic simple">
<li><p><strong>Network Optimization</strong>:</p>
<ul class="simple">
<li><p>Use dedicated high-speed networks</p></li>
<li><p>Optimize TCP window sizes</p></li>
<li><p>Enable jumbo frames where supported</p></li>
</ul>
</li>
<li><p><strong>Protocol Selection</strong>:</p>
<ul class="simple">
<li><p>Choose appropriate protocols for workload</p></li>
<li><p>Optimize protocol-specific parameters</p></li>
<li><p>Consider multi-path configurations</p></li>
</ul>
</li>
<li><p><strong>Monitoring and Maintenance</strong>:</p>
<ul class="simple">
<li><p>Regular performance monitoring</p></li>
<li><p>Proactive capacity planning</p></li>
<li><p>Scheduled maintenance windows</p></li>
</ul>
</li>
</ol>
</section>
</section>
</section>
</section>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>